[{"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Signup.js":"1","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ViewBudget.js":"2","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/App.js":"3","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBudgets.js":"4","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/NewBudget.js":"5","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Dashboard.js":"6","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Navbar.js":"7","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/index.js":"8","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddExpense.js":"9","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Login.js":"10","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/reportWebVitals.js":"11","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Settings.js":"12","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBudget.js":"13","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Account.js":"14","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/FinancialProfile.js":"15","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AccountDetails.js":"16","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteAccountModal.js":"17","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteBudgetModal.js":"18","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/PrivateRoute.js":"19"},{"size":6440,"mtime":1607997720081,"results":"20","hashOfConfig":"21"},{"size":1788,"mtime":1608512505554,"results":"22","hashOfConfig":"21"},{"size":5295,"mtime":1608963835437,"results":"23","hashOfConfig":"21"},{"size":2019,"mtime":1608829129632,"results":"24","hashOfConfig":"21"},{"size":5192,"mtime":1608753668271,"results":"25","hashOfConfig":"21"},{"size":2968,"mtime":1607735259189,"results":"26","hashOfConfig":"21"},{"size":1133,"mtime":1608512039091,"results":"27","hashOfConfig":"21"},{"size":536,"mtime":1607203421724,"results":"28","hashOfConfig":"21"},{"size":4070,"mtime":1608964192284,"results":"29","hashOfConfig":"21"},{"size":1828,"mtime":1608752252343,"results":"30","hashOfConfig":"21"},{"size":356,"mtime":1607203421724,"results":"31","hashOfConfig":"21"},{"size":1088,"mtime":1607203421724,"results":"32","hashOfConfig":"21"},{"size":2022,"mtime":1607649750573,"results":"33","hashOfConfig":"21"},{"size":616,"mtime":1607735259077,"results":"34","hashOfConfig":"21"},{"size":889,"mtime":1608749019581,"results":"35","hashOfConfig":"21"},{"size":2134,"mtime":1608746388611,"results":"36","hashOfConfig":"21"},{"size":1206,"mtime":1607203421724,"results":"37","hashOfConfig":"21"},{"size":1152,"mtime":1608754816141,"results":"38","hashOfConfig":"21"},{"size":303,"mtime":1608417483242,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1b9p1l1",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Signup.js",["88"],"import React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Grid,\n  Message,\n} from \"semantic-ui-react\"\n\nexport default function SignUp() {\n  const params = {\n    firstName: false,\n    lastName: false,\n    email: false,\n    password: false,\n    confirmPassword: false,\n    netMonthlyIncome: false,\n    netMonthlyIncome: false,\n  }\n  const [firstName, setFirstName] = useState(\"\")\n  const [lastName, setLastName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [netSalary, setNetSalary] = useState(\"\")\n  const [netMonthlyIncome, setNetMonthlyIncome] = useState(\"\")\n  const [error, setError] = useState(\"\")\n  const [validationErrors, setValidationErrors] = useState(params)\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function doSignUp() {\n    setLoading(true)\n    if (\n      firstName &&\n      email &&\n      password &&\n      confirmPassword &&\n      netSalary &&\n      netMonthlyIncome\n    ) {\n      const response = await fetch(\"http://localhost:5000/user/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          firstName,\n          lastName,\n          email,\n          password,\n          confirmPassword,\n          netSalary,\n          netMonthlyIncome,\n        }),\n      })\n      if (response.status !== 201) {\n        if (response.status === 500) {\n          setError(\n            \"Something went wrong. Check your internet connection or try again.\"\n          )\n        } else if (response.status === 401) {\n          setError(\"Your username or password is incorrect.\")\n        } else if (response.status === 400) {\n          await response.json().then((errors) => {\n            const messages = params\n            errors.errors.forEach(\n              (error) => (messages[error.param] = error.msg)\n            )\n            setValidationErrors(messages)\n          })\n        }\n        return setLoading(false)\n      }\n      history.push(\"/login?newsignup=true\")\n    }\n  }\n\n  return (\n    <Grid stretched relaxed fluid=\"true\" stackable className=\"mt-3\">\n      <Container>\n        {error ? <Message color=\"red\">{error}</Message> : null}\n        <Header as=\"h1\">Sign Up</Header>\n        <Grid.Column className=\"mt-2\">\n          <Form>\n            <Form.Group widths=\"equal\">\n              <Form.Field error={validationErrors.firstName}>\n                <label>First Name</label>\n                <input\n                  fluid=\"true\"\n                  placeholder=\"First Name\"\n                  onChange={(e) => setFirstName(e.target.value)}\n                />\n                {validationErrors.firstName ? (\n                  <Message color=\"red\">{validationErrors.firstName}</Message>\n                ) : null}\n              </Form.Field>\n              <Form.Field error={validationErrors.lastName}>\n                <label>Last Name</label>\n                <input\n                  fluid=\"true\"\n                  placeholder=\"Last Name\"\n                  onChange={(e) => setLastName(e.target.value)}\n                />\n                {validationErrors.lastName ? (\n                  <Message color=\"red\">{validationErrors.lastName}</Message>\n                ) : null}\n              </Form.Field>\n            </Form.Group>\n            <Form.Field error={validationErrors.email}>\n              <label>Email</label>\n              <input\n                placeholder=\"Email address\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              {validationErrors.email ? (\n                <Message color=\"red\">{validationErrors.email}</Message>\n              ) : null}\n            </Form.Field>\n            <Form.Field\n              error={\n                validationErrors.password || validationErrors.confirmPassword\n              }\n            >\n              <label>Password</label>\n              <input\n                placeholder=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                type=\"password\"\n              />\n              {validationErrors.password ? (\n                <Message color=\"red\">{validationErrors.password}</Message>\n              ) : null}\n            </Form.Field>\n\n            <Form.Field error={validationErrors.confirmPassword}>\n              <label>Confirm Password</label>\n              <input\n                placeholder=\"confirm password\"\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                type=\"password\"\n              />\n              {validationErrors.confirmPassword ? (\n                <Message color=\"red\">\n                  {validationErrors.confirmPassword}\n                </Message>\n              ) : null}\n            </Form.Field>\n            <Divider section />\n            <Header as=\"h3\">Financial Info</Header>\n            <Form.Group widths=\"equal\">\n              <Form.Field width={4} error={validationErrors.netSalary}>\n                <label>Net Salary</label>\n                <input\n                  onChange={(e) => setNetSalary(e.target.value)}\n                  value={netSalary}\n                  placeholder=\"Net salary\"\n                  type=\"number\"\n                />\n                {validationErrors.netSalary ? (\n                  <Message color=\"red\">{validationErrors.netSalary}</Message>\n                ) : null}\n              </Form.Field>\n              <Form.Field width={4} error={validationErrors.netMonthlyIncome}>\n                <label>Net Monthly Income</label>\n                <input\n                  onChange={(e) => setNetMonthlyIncome(e.target.value)}\n                  value={netMonthlyIncome}\n                  placeholder=\"Net monthly income\"\n                  type=\"number\"\n                />\n                {validationErrors.netMonthlyIncome ? (\n                  <Message color=\"red\">\n                    {validationErrors.netMonthlyIncome}\n                  </Message>\n                ) : null}\n              </Form.Field>\n            </Form.Group>\n\n            <Form.Field>\n              <Button primary loading={loading} onClick={doSignUp}>\n                Signup\n              </Button>\n            </Form.Field>\n          </Form>\n        </Grid.Column>\n      </Container>\n    </Grid>\n  )\n}\n",["89","90"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ViewBudget.js",["91"],"import React, { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport {\n  Container,\n  Dimmer,\n  Header,\n  List,\n  Loader,\n  Segment,\n} from \"semantic-ui-react\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default function BudgetView() {\n  const [budget, setBudget] = useState(\"\")\n  const [loading, setLoading] = useState(true)\n  const { id } = useParams()\n\n  useEffect(() => {\n    fetch(`http://localhost:5000/budget/${id}`)\n      .then((response) => response.json())\n      .then((data) => setBudget(data))\n      .finally(() => setLoading(false))\n  }, [])\n\n  if (loading) {\n    return (\n      <Dimmer active>\n        <Loader content=\"Loading...\" />\n      </Dimmer>\n    )\n  }\n\n  if (budget) {\n    return (\n      <Container>\n        <Breadcrumb\n          sections={[\n            { name: \"Dashboard\", path: \"/\" },\n            { name: \"Budgets\", path: \"/budgets/manage\" },\n            { name: budget.title, path: `/budgets/${id}` },\n          ]}\n        />\n        <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n          <Header as=\"h1\">{budget.title}</Header>\n          <p>{budget.description}</p>\n          <List divided size=\"huge\">\n            {budget.Categories.map((category) => (\n              <List.Item key={category.id}>\n                <List.Content floated=\"right\">{category.amount}</List.Content>\n                <List.Content>{category.title}</List.Content>\n              </List.Item>\n            ))}\n            <List.Item key=\"last\" style={{ fontWeight: \"bold\" }}>\n              <List.Content floated=\"right\">\n                ${budget.total.toFixed(2)}\n              </List.Content>\n              <List.Content>Total</List.Content>\n            </List.Item>\n          </List>\n        </Segment>\n      </Container>\n    )\n  }\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/App.js",["92","93","94"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBudgets.js",["95","96","97"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/NewBudget.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Dashboard.js",["98","99","100"],"import React from \"react\"\nimport { Card, Container, Grid, Header, Button, Icon } from \"semantic-ui-react\"\nimport { Link } from \"react-router-dom\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default ({ user }) => {\n  return (\n    <Container>\n      <Header as=\"h2\" style={{ marginTop: \"25px\" }}>\n        {user ? `Welcome, ${user.firstName}` : null}\n      </Header>\n      <Grid padded stackable style={{ marginTop: \"50px\" }}>\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/budgets/new\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"add\" style={{ color: \"mediumSeaGreen \" }} />\n            Create New Budget\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/budgets/manage\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"edit\" style={{ color: \"indianRed \" }} />\n            Manage Budgets\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/expenditures/new\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"dollar\" style={{ color: \"darkOrange \" }} />\n            Record Expenditures\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/finances/manage\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"chart pie\" style={{ color: \"darkOrchid \" }} />\n            Manage Finances\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/expenditures/current/statistics\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"chart bar\" style={{ color: \"mediumAquaMarine \" }} />\n            View Statistics\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/expeditures/current\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"money\" style={{ color: \"dodgerBlue \" }} />\n            View Spending\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/settings\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"setting\" style={{ color: \"salmon \" }} />\n            App Settings\n          </Button>\n        </Grid.Column>\n      </Grid>\n    </Container>\n  )\n}\n",["101","102"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Navbar.js",["103"],"import React from \"react\"\nimport { Menu, Container } from \"semantic-ui-react\"\nimport { NavLink } from \"react-router-dom\"\nimport ConfirmLogoutModal from \"./modals/ConfirmLogoutModal\"\n\nexport default ({ user, login, logout, darkmode }) => {\n  return (\n    <Menu inverted={!darkmode} style={{ borderRadius: \"0\" }}>\n      <Container>\n        <Menu.Item\n          as={NavLink}\n          to=\"/\"\n          exact\n          name={user ? \"dashboard\" : \"SimpleBudget\"}\n        />\n        {user ? (\n          <Menu.Item as={NavLink} to=\"/budgets/manage\" name=\"My Budgets\" />\n        ) : null}\n        <Menu.Menu position=\"right\">\n          {user ? (\n            <Menu.Item\n              as={NavLink}\n              to=\"/account\"\n              icon=\"user\"\n              name=\"Account\"\n            ></Menu.Item>\n          ) : null}\n          {!user ? <Menu.Item as={NavLink} to=\"/login\" name=\"login\" /> : null}\n          {user ? (\n            <ConfirmLogoutModal user={user} logout={logout} />\n          ) : (\n            <Menu.Item as={NavLink} to=\"/signup\" name=\"sign up\" />\n          )}\n        </Menu.Menu>\n      </Container>\n    </Menu>\n  )\n}\n",["104","105"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/index.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddExpense.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Login.js",["106","107"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/reportWebVitals.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Settings.js",["108","109","110"],"import React, { useState } from \"react\"\nimport { Button, Container, Header, Segment } from \"semantic-ui-react\"\nimport ToggleSwitch from \"./ToggleSwitch\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default () => {\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Settings\", path: \"/settings\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Application Settings</Header>\n        <section className=\"mt-2\">\n          <div>\n            <label>\n              <p>Show Pro Tips</p>\n              <ToggleSwitch />\n            </label>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <label>\n              <p>Show Reminders</p>\n              <ToggleSwitch />\n            </label>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <label>\n              <p>Dark Mode</p>\n              <ToggleSwitch />\n            </label>\n          </div>\n        </section>\n      </Segment>\n    </Container>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBudget.js",["111","112","113"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Account.js",["114","115","116"],"import React, { Fragment, useEffect, useState } from \"react\"\nimport { useParams, useHistory } from \"react-router-dom\"\nimport AccountMenu from \"./AccountMenu\"\nimport AccountDetails from \"./AccountDetails\"\nimport FinancialProfile from \"./FinancialProfile\"\n\nexport default ({ user }) => {\n  const { slug } = useParams()\n  const history = useHistory()\n\n  if (!slug) {\n    history.push(\"/account/details\")\n  }\n\n  return (\n    <Fragment>\n      <AccountMenu />\n      {slug === \"details\" || !slug ? (\n        <AccountDetails user={user} />\n      ) : (\n        <FinancialProfile user={user} />\n      )}\n    </Fragment>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/FinancialProfile.js",["117"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AccountDetails.js",["118","119"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteAccountModal.js",["120","121","122"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteBudgetModal.js",["123","124","125"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/PrivateRoute.js",["126"],"import React, { useContext } from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\n\nexport default function PrivateRoute({\n  children,\n  componentProps,\n  user,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={() => (user ? children : <Redirect to=\"/login\" />)}\n    />\n  )\n}\n",{"ruleId":"127","severity":1,"message":"128","line":21,"column":5,"nodeType":"129","messageId":"130","endLine":21,"endColumn":21},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":23,"column":6,"nodeType":"137","endLine":23,"endColumn":8,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"139","line":24,"column":6,"nodeType":"137","endLine":24,"endColumn":9,"suggestions":"140"},{"ruleId":"135","severity":1,"message":"141","line":24,"column":7,"nodeType":"142","endLine":24,"endColumn":8},{"ruleId":"143","severity":1,"message":"144","line":90,"column":12,"nodeType":"145","messageId":"146","endLine":90,"endColumn":22},{"ruleId":"147","severity":1,"message":"148","line":7,"column":1,"nodeType":"149","endLine":57,"endColumn":2},{"ruleId":"143","severity":1,"message":"150","line":8,"column":10,"nodeType":"145","messageId":"146","endLine":8,"endColumn":17},{"ruleId":"143","severity":1,"message":"151","line":8,"column":19,"nodeType":"145","messageId":"146","endLine":8,"endColumn":29},{"ruleId":"143","severity":1,"message":"152","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"153","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":18},{"ruleId":"147","severity":1,"message":"148","line":6,"column":1,"nodeType":"149","endLine":113,"endColumn":2},{"ruleId":"131","replacedBy":"154"},{"ruleId":"133","replacedBy":"155"},{"ruleId":"147","severity":1,"message":"148","line":6,"column":1,"nodeType":"149","endLine":38,"endColumn":2},{"ruleId":"131","replacedBy":"156"},{"ruleId":"133","replacedBy":"157"},{"ruleId":"143","severity":1,"message":"158","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":15},{"ruleId":"143","severity":1,"message":"159","line":14,"column":23,"nodeType":"145","messageId":"146","endLine":14,"endColumn":37},{"ruleId":"143","severity":1,"message":"160","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"161","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":6,"column":1,"nodeType":"149","endLine":42,"endColumn":2},{"ruleId":"147","severity":1,"message":"148","line":13,"column":1,"nodeType":"149","endLine":71,"endColumn":2},{"ruleId":"143","severity":1,"message":"162","line":14,"column":18,"nodeType":"145","messageId":"146","endLine":14,"endColumn":27},{"ruleId":"143","severity":1,"message":"151","line":25,"column":19,"nodeType":"145","messageId":"146","endLine":25,"endColumn":29},{"ruleId":"143","severity":1,"message":"163","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"160","line":1,"column":38,"nodeType":"145","messageId":"146","endLine":1,"endColumn":46},{"ruleId":"147","severity":1,"message":"148","line":7,"column":1,"nodeType":"149","endLine":25,"endColumn":2},{"ruleId":"147","severity":1,"message":"148","line":4,"column":1,"nodeType":"149","endLine":30,"endColumn":2},{"ruleId":"143","severity":1,"message":"164","line":9,"column":3,"nodeType":"145","messageId":"146","endLine":9,"endColumn":10},{"ruleId":"147","severity":1,"message":"148","line":18,"column":1,"nodeType":"149","endLine":72,"endColumn":2},{"ruleId":"143","severity":1,"message":"160","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"165","line":2,"column":18,"nodeType":"145","messageId":"146","endLine":2,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":4,"column":1,"nodeType":"149","endLine":45,"endColumn":2},{"ruleId":"143","severity":1,"message":"160","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"165","line":2,"column":18,"nodeType":"145","messageId":"146","endLine":2,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":4,"column":1,"nodeType":"149","endLine":45,"endColumn":2},{"ruleId":"143","severity":1,"message":"166","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":27},"no-dupe-keys","Duplicate key 'netMonthlyIncome'.","ObjectExpression","unexpected","no-native-reassign",["167"],"no-negated-in-lhs",["168"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["169"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["170"],"The 0 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","no-unused-vars","'deleteUser' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Card' is defined but never used.","'Breadcrumb' is defined but never used.",["167"],["168"],["167"],["168"],"'Cookies' is defined but never used.","'setQueryParams' is assigned a value but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'setBudget' is assigned a value but never used.","'useEffect' is defined but never used.","'Confirm' is defined but never used.","'Header' is defined but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [id]",{"range":"175","text":"176"},"Update the dependencies array to be: [user]",{"range":"177","text":"178"},[587,589],"[id]",[936,939],"[user]"]