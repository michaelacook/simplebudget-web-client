[{"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/reportWebVitals.js":"1","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Settings.js":"2","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddExpense.js":"3","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBudgets.js":"4","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/App.js":"5","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Dashboard.js":"6","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Account.js":"7","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Login.js":"8","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/index.js":"9","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/NewBudget.js":"10","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Navbar.js":"11","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteAccountModal.js":"12","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteBudgetModal.js":"13","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBudget.js":"14","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ToggleSwitch.js":"15","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Signup.js":"16"},{"size":356,"mtime":1607203421724,"results":"17","hashOfConfig":"18"},{"size":1088,"mtime":1607203421724,"results":"19","hashOfConfig":"18"},{"size":4444,"mtime":1607220507994,"results":"20","hashOfConfig":"18"},{"size":1742,"mtime":1607290394932,"results":"21","hashOfConfig":"18"},{"size":1609,"mtime":1607731833978,"results":"22","hashOfConfig":"18"},{"size":3131,"mtime":1607278319558,"results":"23","hashOfConfig":"18"},{"size":548,"mtime":1607203421724,"results":"24","hashOfConfig":"18"},{"size":2285,"mtime":1607733626556,"results":"25","hashOfConfig":"18"},{"size":536,"mtime":1607203421724,"results":"26","hashOfConfig":"18"},{"size":4065,"mtime":1607203421724,"results":"27","hashOfConfig":"18"},{"size":1015,"mtime":1607203421724,"results":"28","hashOfConfig":"18"},{"size":1206,"mtime":1607203421724,"results":"29","hashOfConfig":"18"},{"size":1056,"mtime":1607290368923,"results":"30","hashOfConfig":"18"},{"size":1975,"mtime":1607316103449,"results":"31","hashOfConfig":"18"},{"size":463,"mtime":1607203421724,"results":"32","hashOfConfig":"18"},{"size":1431,"mtime":1607203421724,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1b9p1l1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/reportWebVitals.js",[],["76","77"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Settings.js",["78","79","80"],"import React, { useState } from \"react\"\nimport { Button, Container, Header, Segment } from \"semantic-ui-react\"\nimport ToggleSwitch from \"./ToggleSwitch\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default () => {\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Settings\", path: \"/settings\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Application Settings</Header>\n        <section className=\"mt-2\">\n          <div>\n            <label>\n              <p>Show Pro Tips</p>\n              <ToggleSwitch />\n            </label>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <label>\n              <p>Show Reminders</p>\n              <ToggleSwitch />\n            </label>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <label>\n              <p>Dark Mode</p>\n              <ToggleSwitch />\n            </label>\n          </div>\n        </section>\n      </Segment>\n    </Container>\n  )\n}\n",["81","82"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddExpense.js",["83","84","85"],"import React, { useState } from \"react\"\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Icon,\n  List,\n  Segment,\n} from \"semantic-ui-react\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default () => {\n  const [amount, setAmount] = useState(\"\")\n  const [budget, setBudget] = useState(\"\")\n  const [budgets, setBudgets] = useState([\n    {\n      title: \"Personal\",\n      categories: [\n        { key: 1, text: \"Car\", value: \"car\" },\n        { key: 2, text: \"Groceries\", value: \"groceries\" },\n      ],\n    },\n    {\n      title: \"Business\",\n      categories: [\n        { key: 1, text: \"Internet\", value: \"internet\" },\n        { key: 2, text: \"Debit Machine\", value: \"debit machine\" },\n      ],\n    },\n  ])\n  const [category, setCategory] = useState(\"\")\n  const [date, setDate] = useState(new Date())\n  const [loading, setLoading] = useState(false)\n  const [payload, setPayload] = useState(\"\")\n  const [titles, setTitles] = useState([\n    { key: 1, text: \"Personal\", value: \"personal\" },\n    { key: 2, text: \"Business\", value: \"business\" },\n  ])\n\n  /**\n   * Set budget state based on budget dropdown value\n   * @param {Object} data\n   */\n  const handleBudgetDropdownChange = (data) => {\n    setBudget(\n      budgets.find((budget) => budget.title.toLowerCase() === data.value)\n    )\n  }\n\n  /**\n   * Add a new expenditure to the payload\n   */\n  const addToPayload = () => {\n    setPayload([\n      ...payload,\n      {\n        budget: budget.title,\n        category,\n        amount,\n        date,\n      },\n    ])\n    setAmount(\"\")\n  }\n\n  /**\n   * Remove an expenditure from state\n   * @param {Number} i - expenditure index\n   */\n  const removeFromPayload = (i) => {\n    const newPayload = payload.filter((item, index) => index !== i)\n    setPayload(newPayload)\n  }\n\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Expenditures\", path: \"/expenditures\" },\n          { name: \"New\", path: \"/expenditures/new\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Add Expenses</Header>\n        <Form className=\"mt-1\">\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              type=\"date\"\n              label=\"Date\"\n              value={date}\n              onChange={(e, data) => setDate(data.value)}\n            />\n            <Form.Select\n              label=\"Budget\"\n              options={titles}\n              placeholder=\"Budget\"\n              onChange={(e, data) => handleBudgetDropdownChange(data)}\n            ></Form.Select>\n            <Form.Select\n              label=\"Category\"\n              options={budget.categories}\n              placeholder=\"Category\"\n              onChange={(e, data) => setCategory(data.value)}\n            ></Form.Select>\n            <Form.Input\n              label=\"Amount\"\n              placeholder=\"E.g 25.56\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            ></Form.Input>\n          </Form.Group>\n          <Button color=\"green\" size=\"tiny\" onClick={addToPayload}>\n            <Icon name=\"plus\" />\n            Add\n          </Button>\n        </Form>\n        {payload ? (\n          <React.Fragment>\n            <List divided style={{ marginTop: \"22px\" }}>\n              {payload.map((item, i) => (\n                <List.Item key={i}>\n                  <List.Content floated=\"right\">\n                    <Button\n                      onClick={() => removeFromPayload(i)}\n                      size=\"mini\"\n                      color=\"red\"\n                      float=\"right\"\n                      icon=\"minus\"\n                    ></Button>\n                  </List.Content>\n                  <List.Content>\n                    <List.Header>{item.budget}</List.Header>\n                    <List.Description>\n                      {item.category.toUpperCase()}, ${item.amount}\n                    </List.Description>\n                    <List.Description>{item.date}</List.Description>\n                  </List.Content>\n                </List.Item>\n              ))}\n            </List>\n          </React.Fragment>\n        ) : null}\n        <Divider />\n        <Button\n          compact\n          size=\"big\"\n          loading={loading}\n          onClick={(e) => setLoading(!loading)}\n        >\n          <Icon name=\"save\" />\n          Save\n        </Button>\n      </Segment>\n    </Container>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBudgets.js",["86","87","88","89","90"],"import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport {\n  Button,\n  Container,\n  Header,\n  Icon,\n  List,\n  Segment,\n} from \"semantic-ui-react\"\nimport Breadcrumb from \"./Breadcrumb\"\nimport ConfirmDeleteBudgetModal from \"./modals/ConfirmDeleteBudgetModal\"\n\nexport default () => {\n  const [budgets, setBudget] = useState([\n    {\n      title: \"My Personal Budget\",\n      description: \"My personal budget for monthly expenses.\",\n      id: 1,\n    },\n    { title: \"Side Hustle\", description: \"For my freelance business.\", id: 2 },\n  ])\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Budgets\", path: \"/budgets\" },\n          { name: \"Manage\", path: \"/budgets/manage\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Manage Budgets</Header>\n        <List divided relaxed className=\"mt-2\">\n          {budgets.map((budget) => (\n            <List.Item style={{ marginBottom: \"12px\" }}>\n              <List.Content>\n                <List.Content floated=\"right\">\n                  <Button\n                    as={Link}\n                    to={`/budgets/manage/${budget.id}/`}\n                    compact\n                    icon=\"edit\"\n                    color=\"green\"\n                  />\n                  <ConfirmDeleteBudgetModal />\n                </List.Content>\n                <List.Header>{budget.title}</List.Header>\n                <List.Description>{budget.description}</List.Description>\n              </List.Content>\n            </List.Item>\n          ))}\n        </List>\n      </Segment>\n    </Container>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/App.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Dashboard.js",["91","92","93"],"import React from \"react\"\nimport { Card, Container, Grid, Header, Button, Icon } from \"semantic-ui-react\"\nimport { useHistory } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default ({ user }) => {\n  const history = useHistory()\n\n  // redirect to login page if user is not authenticated\n  if (!user) {\n    history.push(\"/login\")\n  }\n\n  return (\n    <Container>\n      <Header as=\"h2\" style={{ marginTop: \"25px\" }}>\n        Welcome, {user.firstName}\n      </Header>\n      <Grid padded stackable style={{ marginTop: \"50px\" }}>\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/budgets/new\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"add\" style={{ color: \"mediumSeaGreen \" }} />\n            Create New Budget\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/budgets/manage\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"edit\" style={{ color: \"indianRed \" }} />\n            Manage Budgets\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/expenditures/new\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"dollar\" style={{ color: \"darkOrange \" }} />\n            Record Expenditures\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/finances/manage\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"chart pie\" style={{ color: \"darkOrchid \" }} />\n            Manage Finances\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/expenditures/current/statistics\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"chart bar\" style={{ color: \"mediumAquaMarine \" }} />\n            View Statistics\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/expeditures/current\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"money\" style={{ color: \"dodgerBlue \" }} />\n            View Spending\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/settings\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"setting\" style={{ color: \"salmon \" }} />\n            App Settings\n          </Button>\n        </Grid.Column>\n      </Grid>\n    </Container>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Account.js",["94","95","96"],"import React, { Fragment, useEffect, useState } from \"react\"\nimport { useParams, useHistory } from \"react-router-dom\"\nimport AccountMenu from \"./AccountMenu\"\nimport AccountDetails from \"./AccountDetails\"\nimport FinancialProfile from \"./FinancialProfile\"\n\nexport default () => {\n  const { slug } = useParams()\n  const history = useHistory()\n\n  if (!slug) {\n    history.push(\"/account/details\")\n  }\n\n  return (\n    <Fragment>\n      <AccountMenu />\n      {slug === \"details\" || !slug ? <AccountDetails /> : <FinancialProfile />}\n    </Fragment>\n  )\n}\n",["97","98"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Login.js",["99","100"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/index.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/NewBudget.js",["101"],"import React, { useState } from \"react\"\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Icon,\n  Message,\n  Segment,\n} from \"semantic-ui-react\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default () => {\n  const [categories, setCategories] = useState([])\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [categoryName, setCategoryName] = useState(\"\")\n  const [categoryValue, setCategoryValue] = useState(\"\")\n  const [message, setMessage] = useState(true)\n  const [loading, setLoading] = useState(false) // loading set to true when sending a request and waiting for a response\n\n  /**\n   * Add a category to state from form values\n   */\n  const addCategory = () => {\n    if (categoryName && categoryValue) {\n      const category = {}\n      category[categoryName] = categoryValue\n      setCategories([...categories, category])\n      setCategoryName(\"\")\n      setCategoryValue(\"\")\n    }\n  }\n\n  /**\n   * Dismiss message\n   */\n  const handleDismiss = () => {\n    setMessage(false)\n  }\n\n  return (\n    <Container>\n      <Breadcrumb\n        color=\"blue\"\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Budgets\", path: \"/budgets\" },\n          { name: \"New\", path: \"/budgets/new\" },\n        ]}\n      />\n\n      {message ? (\n        <Message onDismiss={handleDismiss} info className=\"mt-2\">\n          <Message.Header>\n            <Icon name=\"idea\" /> Pro Tip\n          </Message.Header>\n          <p>\n            A budget should center on a theme (i.e, personal, side hustle, etc).\n            You can specify as many item categories as you want. To delete a\n            budget item, click it's button.\n          </p>\n        </Message>\n      ) : null}\n\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Create Budget</Header>\n        <Form className=\"mt-1\" fluid>\n          <Form.Field width={15}>\n            <label>Title</label>\n            <Form.Input\n              placeholder=\"E.g My Personal Budget\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            ></Form.Input>\n          </Form.Field>\n          <Form.Field width={15}>\n            <Form.TextArea\n              label=\"Description\"\n              placeholder=\"E.g A budget to track my monthly bills and expenditures\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            ></Form.TextArea>\n          </Form.Field>\n          <Divider hidden />\n          <Header as=\"h3\">Categories</Header>\n          <Form.Group className=\"mt-1\">\n            <Form.Input\n              value={categoryName}\n              width={9}\n              label=\"Category Name\"\n              placeholder=\"E.g Groceries\"\n              onChange={(e) => setCategoryName(e.target.value)}\n            ></Form.Input>\n            <Form.Input\n              value={categoryValue}\n              width={3}\n              label=\"Amount\"\n              placeholder=\"E.g 340.50\"\n              onChange={(e) => setCategoryValue(e.target.value)}\n            ></Form.Input>\n          </Form.Group>\n          <Button color=\"green\" size=\"tiny\" onClick={() => addCategory()}>\n            <Icon name=\"plus\" />\n            Add\n          </Button>\n          <div className=\"mt-1\">\n            {categories.map((item, i) => (\n              <Button\n                key={i}\n                size=\"tiny\"\n                icon\n                labelPosition=\"right\"\n                style={{ marginBottom: \"12px\" }}\n                onClick={() =>\n                  setCategories(categories.filter((item, index) => i !== index))\n                }\n              >\n                {Object.keys(item)[0]} ${Object.values(item)[0]}\n                <Icon name=\"minus\" color=\"red\" />\n              </Button>\n            ))}\n          </div>\n          <Divider hidden />\n          <Button loading={loading} onClick={() => setLoading(true)} size=\"big\">\n            Done\n          </Button>\n        </Form>\n      </Segment>\n    </Container>\n  )\n}\n",["102","103"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Navbar.js",["104"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteAccountModal.js",["105","106","107"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteBudgetModal.js",["108","109","110"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBudget.js",["111","112","113"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ToggleSwitch.js",["114"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Signup.js",["115","116","117","118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":6,"column":1,"nodeType":"131","endLine":42,"endColumn":2},{"ruleId":"120","replacedBy":"132"},{"ruleId":"122","replacedBy":"133"},{"ruleId":"129","severity":1,"message":"130","line":14,"column":1,"nodeType":"131","endLine":159,"endColumn":2},{"ruleId":"124","severity":1,"message":"134","line":17,"column":19,"nodeType":"126","messageId":"127","endLine":17,"endColumn":29},{"ruleId":"124","severity":1,"message":"135","line":37,"column":18,"nodeType":"126","messageId":"127","endLine":37,"endColumn":27},{"ruleId":"124","severity":1,"message":"136","line":7,"column":3,"nodeType":"126","messageId":"127","endLine":7,"endColumn":7},{"ruleId":"129","severity":1,"message":"130","line":14,"column":1,"nodeType":"131","endLine":59,"endColumn":2},{"ruleId":"124","severity":1,"message":"137","line":15,"column":19,"nodeType":"126","messageId":"127","endLine":15,"endColumn":28},{"ruleId":"124","severity":1,"message":"138","line":23,"column":10,"nodeType":"126","messageId":"127","endLine":23,"endColumn":17},{"ruleId":"124","severity":1,"message":"139","line":23,"column":19,"nodeType":"126","messageId":"127","endLine":23,"endColumn":29},{"ruleId":"124","severity":1,"message":"140","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"141","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":7,"column":1,"nodeType":"131","endLine":121,"endColumn":2},{"ruleId":"124","severity":1,"message":"142","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"125","line":1,"column":38,"nodeType":"126","messageId":"127","endLine":1,"endColumn":46},{"ruleId":"129","severity":1,"message":"130","line":7,"column":1,"nodeType":"131","endLine":21,"endColumn":2},{"ruleId":"120","replacedBy":"143"},{"ruleId":"122","replacedBy":"144"},{"ruleId":"124","severity":1,"message":"145","line":7,"column":3,"nodeType":"126","messageId":"127","endLine":7,"endColumn":12},{"ruleId":"129","severity":1,"message":"130","line":14,"column":1,"nodeType":"131","endLine":83,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":14,"column":1,"nodeType":"131","endLine":133,"endColumn":2},{"ruleId":"120","replacedBy":"146"},{"ruleId":"122","replacedBy":"147"},{"ruleId":"129","severity":1,"message":"130","line":5,"column":1,"nodeType":"131","endLine":38,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"148","line":2,"column":18,"nodeType":"126","messageId":"127","endLine":2,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":4,"column":1,"nodeType":"131","endLine":45,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"148","line":2,"column":18,"nodeType":"126","messageId":"127","endLine":2,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":4,"column":1,"nodeType":"131","endLine":41,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":13,"column":1,"nodeType":"131","endLine":68,"endColumn":2},{"ruleId":"124","severity":1,"message":"137","line":14,"column":18,"nodeType":"126","messageId":"127","endLine":14,"endColumn":27},{"ruleId":"124","severity":1,"message":"139","line":25,"column":19,"nodeType":"126","messageId":"127","endLine":25,"endColumn":29},{"ruleId":"129","severity":1,"message":"130","line":7,"column":1,"nodeType":"131","endLine":27,"endColumn":2},{"ruleId":"124","severity":1,"message":"145","line":4,"column":3,"nodeType":"126","messageId":"127","endLine":4,"endColumn":12},{"ruleId":"129","severity":1,"message":"130","line":11,"column":1,"nodeType":"131","endLine":54,"endColumn":2},{"ruleId":"124","severity":1,"message":"149","line":12,"column":10,"nodeType":"126","messageId":"127","endLine":12,"endColumn":18},{"ruleId":"124","severity":1,"message":"150","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":18},{"ruleId":"124","severity":1,"message":"151","line":14,"column":10,"nodeType":"126","messageId":"127","endLine":14,"endColumn":25},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["152"],["153"],"'setBudgets' is assigned a value but never used.","'setTitles' is assigned a value but never used.","'Icon' is defined but never used.","'setBudget' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Card' is defined but never used.","'Breadcrumb' is defined but never used.","'useEffect' is defined but never used.",["152"],["153"],"'Container' is defined but never used.",["152"],["153"],"'Header' is defined but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]