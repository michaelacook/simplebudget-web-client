[{"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Signup.js":"1","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/App.js":"2","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBudget.js":"3","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/NewBudget.js":"4","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/index.js":"5","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddExpense.js":"6","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Login.js":"7","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBudgets.js":"8","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteCategory.js":"9"},{"size":6718,"mtime":1610148067055,"results":"10","hashOfConfig":"11"},{"size":12956,"mtime":1610421447645,"results":"12","hashOfConfig":"11"},{"size":9557,"mtime":1610503925468,"results":"13","hashOfConfig":"11"},{"size":4853,"mtime":1610420397203,"results":"14","hashOfConfig":"11"},{"size":536,"mtime":1607203421724,"results":"15","hashOfConfig":"11"},{"size":4948,"mtime":1609297003940,"results":"16","hashOfConfig":"11"},{"size":1860,"mtime":1610496694544,"results":"17","hashOfConfig":"11"},{"size":1970,"mtime":1610500182731,"results":"18","hashOfConfig":"11"},{"size":582,"mtime":1610503374948,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b9p1l1",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Signup.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/App.js",["40","41"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBudget.js",["42","43"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/NewBudget.js",["44"],"import React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Icon,\n  Message,\n  Segment,\n} from \"semantic-ui-react\"\nimport Cookies from \"js-cookie\"\nimport Breadcrumb from \"./Breadcrumb\"\nimport ProTip from \"./ProTip\"\n\nexport default function NewBudget({ user, budgets, setBudgets, addBudget }) {\n  const [categories, setCategories] = useState([])\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [categoryName, setCategoryName] = useState(\"\")\n  const [categoryValue, setCategoryValue] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState()\n  const history = useHistory()\n\n  /**\n   * Add a category to state from form values\n   */\n  function addCategory() {\n    if (categoryName && categoryValue) {\n      const category = {}\n      category[categoryName] = categoryValue\n      setCategories([...categories, category])\n      setCategoryName(\"\")\n      setCategoryValue(\"\")\n    }\n  }\n\n  function doAddBudget() {\n    if (title && description && categories.length > 0) {\n      setLoading(true)\n      const payload = {\n        budget: {\n          title,\n          description,\n          total: categories.reduce(\n            (acc, curr) => acc + Number(Object.values(curr)[0]),\n            0\n          ),\n          userId: user.id,\n        },\n        categories,\n      }\n      console.log(payload)\n      addBudget(payload)\n        .then((response) => response.json())\n        .then((data) => {\n          // this is necessary so that categories can be viewed in select dropdowns\n          data.Categories.forEach((category) => {\n            category.text = category.title\n            category.value = category.id\n          })\n          setBudgets([...budgets, data])\n          Cookies.set(\"budgets\", JSON.stringify(data))\n          setLoading(false)\n          history.push(`/budgets/${data.id}`)\n        })\n    }\n  }\n\n  return (\n    <Container>\n      <Breadcrumb\n        color=\"blue\"\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Budgets\", path: \"/budgets/manage\" },\n          { name: \"New\", path: \"/budgets/new\" },\n        ]}\n      />\n\n      <ProTip\n        text=\"A budget should center on a theme (i.e, personal, side hustle, etc). You\n        can specify as many item categories as you want. To delete a budget\n        item, click it's button.\"\n      />\n\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        {error ? <Message color=\"red\">{error}</Message> : null}\n        <Header as=\"h2\">Create Budget</Header>\n        <Form className=\"mt-1\" fluid>\n          <Form.Field width={15}>\n            <label>Title</label>\n            <Form.Input\n              placeholder=\"E.g My Personal Budget\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            ></Form.Input>\n          </Form.Field>\n          <Form.Field width={15}>\n            <Form.TextArea\n              label=\"Description\"\n              placeholder=\"E.g A budget to track my monthly bills and expenditures\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            ></Form.TextArea>\n          </Form.Field>\n          <Divider hidden />\n          <Header as=\"h3\">Categories</Header>\n          <Form.Group className=\"mt-1\">\n            <Form.Input\n              value={categoryName}\n              width={9}\n              label=\"Category Name\"\n              placeholder=\"E.g Groceries\"\n              onChange={(e) => setCategoryName(e.target.value)}\n            ></Form.Input>\n            <Form.Input\n              value={categoryValue}\n              width={3}\n              label=\"Amount\"\n              placeholder=\"E.g 340.50\"\n              onChange={(e) => setCategoryValue(e.target.value)}\n            ></Form.Input>\n          </Form.Group>\n          <Button color=\"green\" size=\"tiny\" onClick={() => addCategory()}>\n            <Icon name=\"plus\" />\n            Add\n          </Button>\n          <div className=\"mt-1\">\n            {categories.map((item, i) => (\n              <Button\n                key={i}\n                size=\"tiny\"\n                icon\n                labelPosition=\"right\"\n                style={{ marginBottom: \"12px\" }}\n                onClick={() =>\n                  setCategories(categories.filter((item, index) => i !== index))\n                }\n              >\n                {Object.keys(item)[0]} ${Object.values(item)[0]}\n                <Icon name=\"minus\" color=\"red\" />\n              </Button>\n            ))}\n          </div>\n          <Divider hidden />\n          <Button loading={loading} onClick={() => doAddBudget()} size=\"big\">\n            Done\n          </Button>\n        </Form>\n      </Segment>\n    </Container>\n  )\n}\n",["45","46"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/index.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddExpense.js",["47"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Login.js",["48","49"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBudgets.js",["50","51","52"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteCategory.js",["53"],{"ruleId":"54","severity":1,"message":"55","line":42,"column":6,"nodeType":"56","endLine":42,"endColumn":9,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":42,"column":7,"nodeType":"59","endLine":42,"endColumn":8},{"ruleId":"60","severity":1,"message":"61","line":30,"column":10,"nodeType":"62","messageId":"63","endLine":30,"endColumn":15},{"ruleId":"54","severity":1,"message":"64","line":54,"column":6,"nodeType":"56","endLine":54,"endColumn":8,"suggestions":"65"},{"ruleId":"60","severity":1,"message":"66","line":24,"column":17,"nodeType":"62","messageId":"63","endLine":24,"endColumn":25},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"60","severity":1,"message":"71","line":21,"column":10,"nodeType":"62","messageId":"63","endLine":21,"endColumn":15},{"ruleId":"60","severity":1,"message":"72","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":15},{"ruleId":"60","severity":1,"message":"73","line":14,"column":23,"nodeType":"62","messageId":"63","endLine":14,"endColumn":37},{"ruleId":"74","severity":1,"message":"75","line":7,"column":1,"nodeType":"76","endLine":56,"endColumn":2},{"ruleId":"60","severity":1,"message":"77","line":8,"column":10,"nodeType":"62","messageId":"63","endLine":8,"endColumn":17},{"ruleId":"60","severity":1,"message":"78","line":8,"column":19,"nodeType":"62","messageId":"63","endLine":8,"endColumn":29},{"ruleId":"60","severity":1,"message":"79","line":2,"column":27,"nodeType":"62","messageId":"63","endLine":2,"endColumn":31},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getBills', 'getBudgets', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["80"],"The 0 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","no-unused-vars","'total' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getBudget' and 'id'. Either include them or remove the dependency array. If 'getBudget' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["81"],"'setError' is assigned a value but never used.","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"'error' is assigned a value but never used.","'Cookies' is defined but never used.","'setQueryParams' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Icon' is defined but never used.",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getBills, getBudgets, user]",{"range":"88","text":"89"},"Update the dependencies array to be: [getBudget, id]",{"range":"90","text":"91"},[1538,1541],"[getBills, getBudgets, user]",[1578,1580],"[getBudget, id]"]