[{"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Signup.js":"1","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/App.js":"2","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBudget.js":"3","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/NewBudget.js":"4","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/index.js":"5","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddExpense.js":"6","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Login.js":"7","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBudgets.js":"8","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteCategory.js":"9","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/reportWebVitals.js":"10","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Settings.js":"11","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditExpenditure.js":"12","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Dashboard.js":"13","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Account.js":"14","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteBudgetModal.js":"15"},{"size":6718,"mtime":1610148067055,"results":"16","hashOfConfig":"17"},{"size":13030,"mtime":1610765287738,"results":"18","hashOfConfig":"17"},{"size":9798,"mtime":1610765366836,"results":"19","hashOfConfig":"17"},{"size":4853,"mtime":1610420397203,"results":"20","hashOfConfig":"17"},{"size":536,"mtime":1607203421724,"results":"21","hashOfConfig":"17"},{"size":4948,"mtime":1609297003940,"results":"22","hashOfConfig":"17"},{"size":1860,"mtime":1610496694544,"results":"23","hashOfConfig":"17"},{"size":1959,"mtime":1610764446998,"results":"24","hashOfConfig":"17"},{"size":582,"mtime":1610503374948,"results":"25","hashOfConfig":"17"},{"size":356,"mtime":1607203421724,"results":"26","hashOfConfig":"17"},{"size":1088,"mtime":1607203421724,"results":"27","hashOfConfig":"17"},{"size":4608,"mtime":1609985829886,"results":"28","hashOfConfig":"17"},{"size":3375,"mtime":1609365903685,"results":"29","hashOfConfig":"17"},{"size":673,"mtime":1609619690599,"results":"30","hashOfConfig":"17"},{"size":1132,"mtime":1610765536091,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1b9p1l1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Signup.js",[],["66","67"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/App.js",["68","69"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBudget.js",["70","71"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/NewBudget.js",["72"],"import React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Icon,\n  Message,\n  Segment,\n} from \"semantic-ui-react\"\nimport Cookies from \"js-cookie\"\nimport Breadcrumb from \"./Breadcrumb\"\nimport ProTip from \"./ProTip\"\n\nexport default function NewBudget({ user, budgets, setBudgets, addBudget }) {\n  const [categories, setCategories] = useState([])\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [categoryName, setCategoryName] = useState(\"\")\n  const [categoryValue, setCategoryValue] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState()\n  const history = useHistory()\n\n  /**\n   * Add a category to state from form values\n   */\n  function addCategory() {\n    if (categoryName && categoryValue) {\n      const category = {}\n      category[categoryName] = categoryValue\n      setCategories([...categories, category])\n      setCategoryName(\"\")\n      setCategoryValue(\"\")\n    }\n  }\n\n  function doAddBudget() {\n    if (title && description && categories.length > 0) {\n      setLoading(true)\n      const payload = {\n        budget: {\n          title,\n          description,\n          total: categories.reduce(\n            (acc, curr) => acc + Number(Object.values(curr)[0]),\n            0\n          ),\n          userId: user.id,\n        },\n        categories,\n      }\n      console.log(payload)\n      addBudget(payload)\n        .then((response) => response.json())\n        .then((data) => {\n          // this is necessary so that categories can be viewed in select dropdowns\n          data.Categories.forEach((category) => {\n            category.text = category.title\n            category.value = category.id\n          })\n          setBudgets([...budgets, data])\n          Cookies.set(\"budgets\", JSON.stringify(data))\n          setLoading(false)\n          history.push(`/budgets/${data.id}`)\n        })\n    }\n  }\n\n  return (\n    <Container>\n      <Breadcrumb\n        color=\"blue\"\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Budgets\", path: \"/budgets/manage\" },\n          { name: \"New\", path: \"/budgets/new\" },\n        ]}\n      />\n\n      <ProTip\n        text=\"A budget should center on a theme (i.e, personal, side hustle, etc). You\n        can specify as many item categories as you want. To delete a budget\n        item, click it's button.\"\n      />\n\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        {error ? <Message color=\"red\">{error}</Message> : null}\n        <Header as=\"h2\">Create Budget</Header>\n        <Form className=\"mt-1\" fluid>\n          <Form.Field width={15}>\n            <label>Title</label>\n            <Form.Input\n              placeholder=\"E.g My Personal Budget\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            ></Form.Input>\n          </Form.Field>\n          <Form.Field width={15}>\n            <Form.TextArea\n              label=\"Description\"\n              placeholder=\"E.g A budget to track my monthly bills and expenditures\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            ></Form.TextArea>\n          </Form.Field>\n          <Divider hidden />\n          <Header as=\"h3\">Categories</Header>\n          <Form.Group className=\"mt-1\">\n            <Form.Input\n              value={categoryName}\n              width={9}\n              label=\"Category Name\"\n              placeholder=\"E.g Groceries\"\n              onChange={(e) => setCategoryName(e.target.value)}\n            ></Form.Input>\n            <Form.Input\n              value={categoryValue}\n              width={3}\n              label=\"Amount\"\n              placeholder=\"E.g 340.50\"\n              onChange={(e) => setCategoryValue(e.target.value)}\n            ></Form.Input>\n          </Form.Group>\n          <Button color=\"green\" size=\"tiny\" onClick={() => addCategory()}>\n            <Icon name=\"plus\" />\n            Add\n          </Button>\n          <div className=\"mt-1\">\n            {categories.map((item, i) => (\n              <Button\n                key={i}\n                size=\"tiny\"\n                icon\n                labelPosition=\"right\"\n                style={{ marginBottom: \"12px\" }}\n                onClick={() =>\n                  setCategories(categories.filter((item, index) => i !== index))\n                }\n              >\n                {Object.keys(item)[0]} ${Object.values(item)[0]}\n                <Icon name=\"minus\" color=\"red\" />\n              </Button>\n            ))}\n          </div>\n          <Divider hidden />\n          <Button loading={loading} onClick={() => doAddBudget()} size=\"big\">\n            Done\n          </Button>\n        </Form>\n      </Segment>\n    </Container>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/index.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddExpense.js",["73"],"import React, { useState } from \"react\"\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Icon,\n  List,\n  Segment,\n} from \"semantic-ui-react\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default function AddExpense(props) {\n  const [amount, setAmount] = useState(\"\")\n  const [budget, setBudget] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const [date, setDate] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [payload, setPayload] = useState([])\n  const [error, setError] = useState(\"\")\n  const [saveButtonText, setSaveButtonText] = useState(\"Save\")\n\n  const budgetTitles = props.budgets.map((budget) => {\n    return {\n      key: budget.id,\n      text: budget.title,\n      value: budget.title,\n    }\n  })\n\n  /**\n   * Handle click to save expenditures\n   */\n  function handleSave() {\n    setLoading(true)\n    props\n      .addExpenditure(payload)\n      .then(() => {\n        setLoading(false)\n        setAmount(\"\")\n        setDate(\"\")\n        setPayload([])\n        setSaveButtonText(\"Saved!\")\n      })\n      .catch((error) => setError(error))\n  }\n\n  /**\n   * Set budget state based on budget dropdown value\n   * @param {Object} data\n   */\n  function handleBudgetDropdownChange(data) {\n    setBudget(props.budgets.find((budget) => budget.title === data.value))\n  }\n\n  /**\n   * Add a category to state\n   * @param {Object} data - select element data\n   */\n  function handleSetCategory(data) {\n    const categoryId = data.value\n    const category = budget.Categories.find(\n      (category) => category.id === categoryId\n    )\n    setCategory(category)\n  }\n\n  /**\n   * Add a new expenditure to the http payload\n   */\n  function addToPayload() {\n    const newPayLoad = payload\n    const [year, month, day] = date.split(\"-\")\n    newPayLoad.push({\n      userId: props.user.id,\n      budgetId: budget.id,\n      categoryId: category.id,\n      title: category.title,\n      amount,\n      date,\n      year,\n      month,\n      day,\n    })\n    setPayload(newPayLoad)\n    setAmount(\"\")\n  }\n\n  /**\n   * Remove an expenditure from state\n   * @param {Number} i - expenditure index\n   */\n  function removeFromPayload(i) {\n    const newPayload = payload.filter((item, index) => index !== i)\n    setPayload(newPayload)\n  }\n\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Expenditures\", path: \"/expenditures\" },\n          { name: \"New\", path: \"/expenditures/new\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Add Expenses</Header>\n        <Form className=\"mt-1\">\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              fluid\n              type=\"date\"\n              label=\"Date\"\n              value={date}\n              onChange={(e, data) => setDate(data.value)}\n            />\n            <Form.Select\n              fluid\n              label=\"Budget\"\n              options={budgetTitles}\n              placeholder=\"Budget\"\n              onChange={(e, data) => handleBudgetDropdownChange(data)}\n            ></Form.Select>\n            <Form.Select\n              fluid\n              label=\"Category\"\n              options={budget.Categories}\n              placeholder=\"Category\"\n              onChange={(e, data) => handleSetCategory(data)}\n            ></Form.Select>\n            <Form.Input\n              fluid\n              label=\"Amount\"\n              placeholder=\"E.g 25.56\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            ></Form.Input>\n          </Form.Group>\n          <Button color=\"green\" size=\"tiny\" onClick={addToPayload}>\n            <Icon name=\"plus\" />\n            Add\n          </Button>\n        </Form>\n        {payload ? (\n          <React.Fragment>\n            <List divided style={{ marginTop: \"22px\" }}>\n              {payload.map((item, i) => (\n                <List.Item key={i}>\n                  <List.Content floated=\"right\">\n                    <Button\n                      onClick={() => removeFromPayload(i)}\n                      size=\"mini\"\n                      color=\"red\"\n                      float=\"right\"\n                      icon=\"minus\"\n                    ></Button>\n                  </List.Content>\n                  <List.Content>\n                    <List.Header>{item.budget}</List.Header>\n                    <List.Description>\n                      {item.title}, ${item.amount}\n                    </List.Description>\n                    <List.Description>{item.date}</List.Description>\n                  </List.Content>\n                </List.Item>\n              ))}\n            </List>\n          </React.Fragment>\n        ) : null}\n        <Divider />\n        <Button compact size=\"big\" loading={loading} onClick={handleSave}>\n          <Icon name=\"save\" />\n          {saveButtonText}\n        </Button>\n      </Segment>\n    </Container>\n  )\n}\n",["74","75"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Login.js",["76","77"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBudgets.js",["78","79","80"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteCategory.js",["81"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/reportWebVitals.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Settings.js",["82","83","84"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditExpenditure.js",["85","86"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Dashboard.js",["87","88","89","90","91"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Account.js",["92","93","94"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteBudgetModal.js",["95","96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":42,"column":6,"nodeType":"104","endLine":42,"endColumn":9,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":42,"column":7,"nodeType":"107","endLine":42,"endColumn":8},{"ruleId":"108","severity":1,"message":"109","line":32,"column":10,"nodeType":"110","messageId":"111","endLine":32,"endColumn":15},{"ruleId":"102","severity":1,"message":"112","line":56,"column":6,"nodeType":"104","endLine":56,"endColumn":8,"suggestions":"113"},{"ruleId":"108","severity":1,"message":"114","line":24,"column":17,"nodeType":"110","messageId":"111","endLine":24,"endColumn":25},{"ruleId":"108","severity":1,"message":"115","line":21,"column":10,"nodeType":"110","messageId":"111","endLine":21,"endColumn":15},{"ruleId":"98","replacedBy":"116"},{"ruleId":"100","replacedBy":"117"},{"ruleId":"108","severity":1,"message":"118","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":15},{"ruleId":"108","severity":1,"message":"119","line":14,"column":23,"nodeType":"110","messageId":"111","endLine":14,"endColumn":37},{"ruleId":"120","severity":1,"message":"121","line":7,"column":1,"nodeType":"122","endLine":56,"endColumn":2},{"ruleId":"108","severity":1,"message":"123","line":8,"column":10,"nodeType":"110","messageId":"111","endLine":8,"endColumn":17},{"ruleId":"108","severity":1,"message":"124","line":8,"column":19,"nodeType":"110","messageId":"111","endLine":8,"endColumn":29},{"ruleId":"108","severity":1,"message":"125","line":2,"column":27,"nodeType":"110","messageId":"111","endLine":2,"endColumn":31},{"ruleId":"108","severity":1,"message":"126","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"108","severity":1,"message":"127","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":6,"column":1,"nodeType":"122","endLine":42,"endColumn":2},{"ruleId":"108","severity":1,"message":"115","line":31,"column":10,"nodeType":"110","messageId":"111","endLine":31,"endColumn":15},{"ruleId":"102","severity":1,"message":"128","line":49,"column":6,"nodeType":"104","endLine":49,"endColumn":8,"suggestions":"129"},{"ruleId":"108","severity":1,"message":"130","line":3,"column":16,"nodeType":"110","messageId":"111","endLine":3,"endColumn":26},{"ruleId":"108","severity":1,"message":"131","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":6,"column":1,"nodeType":"122","endLine":131,"endColumn":2},{"ruleId":"108","severity":1,"message":"132","line":8,"column":9,"nodeType":"110","messageId":"111","endLine":8,"endColumn":13},{"ruleId":"108","severity":1,"message":"133","line":9,"column":9,"nodeType":"110","messageId":"111","endLine":9,"endColumn":14},{"ruleId":"108","severity":1,"message":"134","line":1,"column":27,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"126","line":1,"column":38,"nodeType":"110","messageId":"111","endLine":1,"endColumn":46},{"ruleId":"120","severity":1,"message":"121","line":7,"column":1,"nodeType":"122","endLine":25,"endColumn":2},{"ruleId":"108","severity":1,"message":"126","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"108","severity":1,"message":"135","line":2,"column":18,"nodeType":"110","messageId":"111","endLine":2,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":4,"column":1,"nodeType":"122","endLine":45,"endColumn":2},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getBills', 'getBudgets', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["138"],"The 0 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","no-unused-vars","'total' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getBudget' and 'id'. Either include them or remove the dependency array. If 'getBudget' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["139"],"'setError' is assigned a value but never used.","'error' is assigned a value but never used.",["136"],["137"],"'Cookies' is defined but never used.","'setQueryParams' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Icon' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'budgets', 'getExpenditure', and 'id'. Either include them or remove the dependency array. If 'getExpenditure' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["140"],"'useHistory' is defined but never used.","'Reminder' is defined but never used.","'year' is assigned a value but never used.","'month' is assigned a value but never used.","'useEffect' is defined but never used.","'Header' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [getBills, getBudgets, user]",{"range":"147","text":"148"},"Update the dependencies array to be: [getBudget, id]",{"range":"149","text":"150"},"Update the dependencies array to be: [budgets, getExpenditure, id]",{"range":"151","text":"152"},[1538,1541],"[getBills, getBudgets, user]",[1667,1669],"[getBudget, id]",[1427,1429],"[budgets, getExpenditure, id]"]