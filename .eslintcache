[{"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/NewBudget.js":"1","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ViewSpending.js":"2","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/App.js":"3","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddExpense.js":"4","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Dashboard.js":"5","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/index.js":"6","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Settings.js":"7","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ViewBudget.js":"8","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Login.js":"9","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/reportWebVitals.js":"10","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBudgets.js":"11","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Signup.js":"12","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBudget.js":"13","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Navbar.js":"14","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ProTip.js":"15","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ViewStatistics.js":"16","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Account.js":"17","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBills.js":"18","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddBill.js":"19","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Reminder.js":"20","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteAccountModal.js":"21","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmLogoutModal.js":"22","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteBillModal.js":"23","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/FinancialProfile.js":"24","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBill.js":"25","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditExpenditure.js":"26"},{"size":4826,"mtime":1609649998662,"results":"27","hashOfConfig":"28"},{"size":7647,"mtime":1609804514143,"results":"29","hashOfConfig":"28"},{"size":10797,"mtime":1609807351202,"results":"30","hashOfConfig":"28"},{"size":4948,"mtime":1609297003940,"results":"31","hashOfConfig":"28"},{"size":3375,"mtime":1609365903685,"results":"32","hashOfConfig":"28"},{"size":536,"mtime":1607203421724,"results":"33","hashOfConfig":"28"},{"size":1088,"mtime":1607203421724,"results":"34","hashOfConfig":"28"},{"size":1788,"mtime":1608512505554,"results":"35","hashOfConfig":"28"},{"size":1863,"mtime":1609634662320,"results":"36","hashOfConfig":"28"},{"size":356,"mtime":1607203421724,"results":"37","hashOfConfig":"28"},{"size":2019,"mtime":1608829129632,"results":"38","hashOfConfig":"28"},{"size":6776,"mtime":1609004928975,"results":"39","hashOfConfig":"28"},{"size":2022,"mtime":1607649750573,"results":"40","hashOfConfig":"28"},{"size":1133,"mtime":1608512039091,"results":"41","hashOfConfig":"28"},{"size":468,"mtime":1609254977773,"results":"42","hashOfConfig":"28"},{"size":497,"mtime":1609289781079,"results":"43","hashOfConfig":"28"},{"size":673,"mtime":1609619690599,"results":"44","hashOfConfig":"28"},{"size":1851,"mtime":1609702951959,"results":"45","hashOfConfig":"28"},{"size":2575,"mtime":1609634681996,"results":"46","hashOfConfig":"28"},{"size":478,"mtime":1609365834360,"results":"47","hashOfConfig":"28"},{"size":1422,"mtime":1609004236192,"results":"48","hashOfConfig":"28"},{"size":988,"mtime":1607737172635,"results":"49","hashOfConfig":"28"},{"size":1134,"mtime":1609618816282,"results":"50","hashOfConfig":"28"},{"size":1906,"mtime":1609652599492,"results":"51","hashOfConfig":"28"},{"size":2686,"mtime":1609706950354,"results":"52","hashOfConfig":"28"},{"size":3619,"mtime":1609819571615,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"1b9p1l1",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/NewBudget.js",["124"],"import React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Icon,\n  Message,\n  Segment,\n} from \"semantic-ui-react\"\nimport Cookies from \"js-cookie\"\nimport Breadcrumb from \"./Breadcrumb\"\nimport ProTip from \"./ProTip\"\n\nexport default function NewBudget({ user, budgets, setBudgets, addBudget }) {\n  const [categories, setCategories] = useState([])\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [categoryName, setCategoryName] = useState(\"\")\n  const [categoryValue, setCategoryValue] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState()\n  const history = useHistory()\n\n  /**\n   * Add a category to state from form values\n   */\n  function addCategory() {\n    if (categoryName && categoryValue) {\n      const category = {}\n      category[categoryName] = categoryValue\n      setCategories([...categories, category])\n      setCategoryName(\"\")\n      setCategoryValue(\"\")\n    }\n  }\n\n  function doAddBudget() {\n    if (title && description && categories.length > 0) {\n      setLoading(true)\n      const payload = {\n        budget: {\n          title,\n          description,\n          total: categories.reduce(\n            (acc, curr) => acc + Number(Object.values(curr)[0]),\n            0\n          ),\n          userId: user.id,\n        },\n        categories,\n      }\n      addBudget(payload)\n        .then((response) => response.json())\n        .then((data) => {\n          // this is necessary so that categories can be viewed in select dropdowns\n          data.Categories.forEach((category) => {\n            category.text = category.title\n            category.value = category.id\n          })\n          setBudgets([...budgets, data])\n          Cookies.set(\"budgets\", JSON.stringify(data))\n          setLoading(false)\n          history.push(`/budgets/${data.id}`)\n        })\n    }\n  }\n\n  return (\n    <Container>\n      <Breadcrumb\n        color=\"blue\"\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Budgets\", path: \"/budgets/manage\" },\n          { name: \"New\", path: \"/budgets/new\" },\n        ]}\n      />\n\n      <ProTip\n        text=\"A budget should center on a theme (i.e, personal, side hustle, etc). You\n        can specify as many item categories as you want. To delete a budget\n        item, click it's button.\"\n      />\n\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        {error ? <Message color=\"red\">{error}</Message> : null}\n        <Header as=\"h2\">Create Budget</Header>\n        <Form className=\"mt-1\" fluid>\n          <Form.Field width={15}>\n            <label>Title</label>\n            <Form.Input\n              placeholder=\"E.g My Personal Budget\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            ></Form.Input>\n          </Form.Field>\n          <Form.Field width={15}>\n            <Form.TextArea\n              label=\"Description\"\n              placeholder=\"E.g A budget to track my monthly bills and expenditures\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            ></Form.TextArea>\n          </Form.Field>\n          <Divider hidden />\n          <Header as=\"h3\">Categories</Header>\n          <Form.Group className=\"mt-1\">\n            <Form.Input\n              value={categoryName}\n              width={9}\n              label=\"Category Name\"\n              placeholder=\"E.g Groceries\"\n              onChange={(e) => setCategoryName(e.target.value)}\n            ></Form.Input>\n            <Form.Input\n              value={categoryValue}\n              width={3}\n              label=\"Amount\"\n              placeholder=\"E.g 340.50\"\n              onChange={(e) => setCategoryValue(e.target.value)}\n            ></Form.Input>\n          </Form.Group>\n          <Button color=\"green\" size=\"tiny\" onClick={() => addCategory()}>\n            <Icon name=\"plus\" />\n            Add\n          </Button>\n          <div className=\"mt-1\">\n            {categories.map((item, i) => (\n              <Button\n                key={i}\n                size=\"tiny\"\n                icon\n                labelPosition=\"right\"\n                style={{ marginBottom: \"12px\" }}\n                onClick={() =>\n                  setCategories(categories.filter((item, index) => i !== index))\n                }\n              >\n                {Object.keys(item)[0]} ${Object.values(item)[0]}\n                <Icon name=\"minus\" color=\"red\" />\n              </Button>\n            ))}\n          </div>\n          <Divider hidden />\n          <Button loading={loading} onClick={() => doAddBudget()} size=\"big\">\n            Done\n          </Button>\n        </Form>\n      </Segment>\n    </Container>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ViewSpending.js",["125","126"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/App.js",["127","128"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddExpense.js",["129"],"import React, { useState } from \"react\"\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Icon,\n  List,\n  Segment,\n} from \"semantic-ui-react\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default function AddExpense(props) {\n  const [amount, setAmount] = useState(\"\")\n  const [budget, setBudget] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const [date, setDate] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [payload, setPayload] = useState([])\n  const [error, setError] = useState(\"\")\n  const [saveButtonText, setSaveButtonText] = useState(\"Save\")\n\n  const budgetTitles = props.budgets.map((budget) => {\n    return {\n      key: budget.id,\n      text: budget.title,\n      value: budget.title,\n    }\n  })\n\n  /**\n   * Handle click to save expenditures\n   */\n  function handleSave() {\n    setLoading(true)\n    props\n      .addExpenditure(payload)\n      .then(() => {\n        setLoading(false)\n        setAmount(\"\")\n        setDate(\"\")\n        setPayload([])\n        setSaveButtonText(\"Saved!\")\n      })\n      .catch((error) => setError(error))\n  }\n\n  /**\n   * Set budget state based on budget dropdown value\n   * @param {Object} data\n   */\n  function handleBudgetDropdownChange(data) {\n    setBudget(props.budgets.find((budget) => budget.title === data.value))\n  }\n\n  /**\n   * Add a category to state\n   * @param {Object} data - select element data\n   */\n  function handleSetCategory(data) {\n    const categoryId = data.value\n    const category = budget.Categories.find(\n      (category) => category.id === categoryId\n    )\n    setCategory(category)\n  }\n\n  /**\n   * Add a new expenditure to the http payload\n   */\n  function addToPayload() {\n    const newPayLoad = payload\n    const [year, month, day] = date.split(\"-\")\n    newPayLoad.push({\n      userId: props.user.id,\n      budgetId: budget.id,\n      categoryId: category.id,\n      title: category.title,\n      amount,\n      date,\n      year,\n      month,\n      day,\n    })\n    setPayload(newPayLoad)\n    setAmount(\"\")\n  }\n\n  /**\n   * Remove an expenditure from state\n   * @param {Number} i - expenditure index\n   */\n  function removeFromPayload(i) {\n    const newPayload = payload.filter((item, index) => index !== i)\n    setPayload(newPayload)\n  }\n\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Expenditures\", path: \"/expenditures\" },\n          { name: \"New\", path: \"/expenditures/new\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Add Expenses</Header>\n        <Form className=\"mt-1\">\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              fluid\n              type=\"date\"\n              label=\"Date\"\n              value={date}\n              onChange={(e, data) => setDate(data.value)}\n            />\n            <Form.Select\n              fluid\n              label=\"Budget\"\n              options={budgetTitles}\n              placeholder=\"Budget\"\n              onChange={(e, data) => handleBudgetDropdownChange(data)}\n            ></Form.Select>\n            <Form.Select\n              fluid\n              label=\"Category\"\n              options={budget.Categories}\n              placeholder=\"Category\"\n              onChange={(e, data) => handleSetCategory(data)}\n            ></Form.Select>\n            <Form.Input\n              fluid\n              label=\"Amount\"\n              placeholder=\"E.g 25.56\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            ></Form.Input>\n          </Form.Group>\n          <Button color=\"green\" size=\"tiny\" onClick={addToPayload}>\n            <Icon name=\"plus\" />\n            Add\n          </Button>\n        </Form>\n        {payload ? (\n          <React.Fragment>\n            <List divided style={{ marginTop: \"22px\" }}>\n              {payload.map((item, i) => (\n                <List.Item key={i}>\n                  <List.Content floated=\"right\">\n                    <Button\n                      onClick={() => removeFromPayload(i)}\n                      size=\"mini\"\n                      color=\"red\"\n                      float=\"right\"\n                      icon=\"minus\"\n                    ></Button>\n                  </List.Content>\n                  <List.Content>\n                    <List.Header>{item.budget}</List.Header>\n                    <List.Description>\n                      {item.title}, ${item.amount}\n                    </List.Description>\n                    <List.Description>{item.date}</List.Description>\n                  </List.Content>\n                </List.Item>\n              ))}\n            </List>\n          </React.Fragment>\n        ) : null}\n        <Divider />\n        <Button compact size=\"big\" loading={loading} onClick={handleSave}>\n          <Icon name=\"save\" />\n          {saveButtonText}\n        </Button>\n      </Segment>\n    </Container>\n  )\n}\n",["130","131"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Dashboard.js",["132","133","134","135","136"],"import React from \"react\"\nimport { Container, Grid, Header, Button, Icon } from \"semantic-ui-react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport Reminder from \"./Reminder\"\n\nexport default ({ user }) => {\n  const date = new Date()\n  const year = date.getFullYear()\n  const month = date.getMonth()\n\n  return (\n    <Container>\n      <Header as=\"h2\" style={{ marginTop: \"25px\" }}>\n        {user ? `Welcome, ${user.firstName}` : null}\n      </Header>\n      <Grid padded stackable style={{ marginTop: \"50px\" }}>\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/budgets/new\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"add\" style={{ color: \"mediumSeaGreen \" }} />\n            Create New Budget\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/budgets/manage\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"edit\" style={{ color: \"indianRed \" }} />\n            Manage Budgets\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/expenditures/new\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"dollar\" style={{ color: \"darkOrange \" }} />\n            Record Expenditures\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/bills\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"chart pie\" style={{ color: \"darkOrchid \" }} />\n            Manage Bills\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/bills/new\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"add\" style={{ color: \"mediumSeaGreen \" }} />\n            Record Bills\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/statistics\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"chart bar\" style={{ color: \"mediumAquaMarine \" }} />\n            View Statistics\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/expenditures/view\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"money\" style={{ color: \"dodgerBlue \" }} />\n            View Spending\n          </Button>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          <Button\n            className=\"dashboard-btn\"\n            fluid\n            as={Link}\n            to=\"/settings\"\n            raised\n            size=\"big\"\n          >\n            <Icon name=\"setting\" style={{ color: \"salmon \" }} />\n            App Settings\n          </Button>\n        </Grid.Column>\n      </Grid>\n    </Container>\n  )\n}\n",["137","138"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/index.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Settings.js",["139","140","141"],"import React, { useState } from \"react\"\nimport { Button, Container, Header, Segment } from \"semantic-ui-react\"\nimport ToggleSwitch from \"./ToggleSwitch\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default () => {\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Settings\", path: \"/settings\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Application Settings</Header>\n        <section className=\"mt-2\">\n          <div>\n            <label>\n              <p>Show Pro Tips</p>\n              <ToggleSwitch />\n            </label>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <label>\n              <p>Show Reminders</p>\n              <ToggleSwitch />\n            </label>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <label>\n              <p>Dark Mode</p>\n              <ToggleSwitch />\n            </label>\n          </div>\n        </section>\n      </Segment>\n    </Container>\n  )\n}\n",["142","143"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ViewBudget.js",["144"],"import React, { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport {\n  Container,\n  Dimmer,\n  Header,\n  List,\n  Loader,\n  Segment,\n} from \"semantic-ui-react\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default function BudgetView() {\n  const [budget, setBudget] = useState(\"\")\n  const [loading, setLoading] = useState(true)\n  const { id } = useParams()\n\n  useEffect(() => {\n    fetch(`http://localhost:5000/budget/${id}`)\n      .then((response) => response.json())\n      .then((data) => setBudget(data))\n      .finally(() => setLoading(false))\n  }, [])\n\n  if (loading) {\n    return (\n      <Dimmer active>\n        <Loader content=\"Loading...\" />\n      </Dimmer>\n    )\n  }\n\n  if (budget) {\n    return (\n      <Container>\n        <Breadcrumb\n          sections={[\n            { name: \"Dashboard\", path: \"/\" },\n            { name: \"Budgets\", path: \"/budgets/manage\" },\n            { name: budget.title, path: `/budgets/${id}` },\n          ]}\n        />\n        <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n          <Header as=\"h1\">{budget.title}</Header>\n          <p>{budget.description}</p>\n          <List divided size=\"huge\">\n            {budget.Categories.map((category) => (\n              <List.Item key={category.id}>\n                <List.Content floated=\"right\">{category.amount}</List.Content>\n                <List.Content>{category.title}</List.Content>\n              </List.Item>\n            ))}\n            <List.Item key=\"last\" style={{ fontWeight: \"bold\" }}>\n              <List.Content floated=\"right\">\n                ${budget.total.toFixed(2)}\n              </List.Content>\n              <List.Content>Total</List.Content>\n            </List.Item>\n          </List>\n        </Segment>\n      </Container>\n    )\n  }\n}\n",["145","146"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Login.js",["147","148"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/reportWebVitals.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBudgets.js",["149","150","151"],"import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Button, Container, Header, List, Segment } from \"semantic-ui-react\"\nimport Breadcrumb from \"./Breadcrumb\"\nimport ConfirmDeleteBudgetModal from \"./modals/ConfirmDeleteBudgetModal\"\n\nexport default ({ budgets, deleteBudget }) => {\n  const [loading, setLoading] = useState(false)\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Budgets\", path: \"/budgets\" },\n          { name: \"Manage\", path: \"/budgets/manage\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Manage Budgets</Header>\n        <List divided relaxed className=\"mt-2\">\n          {budgets ? (\n            budgets.map((budget) => (\n              <List.Item style={{ marginBottom: \"12px\" }}>\n                <List.Content>\n                  <List.Content floated=\"right\">\n                    <Button\n                      as={Link}\n                      to={`/budgets/manage/${budget.id}/`}\n                      compact\n                      icon=\"edit\"\n                      color=\"green\"\n                    />\n                    <ConfirmDeleteBudgetModal\n                      deleteBudget={deleteBudget}\n                      budgetId={budget.id}\n                    />\n                  </List.Content>\n                  <List.Header as={Link} to={`/budgets/${budget.id}`}>\n                    {budget.title}\n                  </List.Header>\n                  <List.Description>{budget.description}</List.Description>\n                </List.Content>\n              </List.Item>\n            ))\n          ) : (\n            <React.Fragment>\n              <Header as=\"h5\">You have not yet created any budgets.</Header>\n              <Button as={Link} to=\"/budgets/new\">\n                Create New Budget\n              </Button>\n            </React.Fragment>\n          )}\n        </List>\n      </Segment>\n    </Container>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Signup.js",["152","153"],"import React, { useState } from \"react\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Grid,\n  Message,\n} from \"semantic-ui-react\"\n\nexport default function SignUp() {\n  const params = {\n    firstName: false,\n    lastName: false,\n    email: false,\n    password: false,\n    confirmPassword: false,\n    netMonthlyIncome: false,\n    netMonthlyIncome: false,\n  }\n  const [firstName, setFirstName] = useState(\"\")\n  const [lastName, setLastName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [netSalary, setNetSalary] = useState(\"\")\n  const [netMonthlyIncome, setNetMonthlyIncome] = useState(\"\")\n  const [error, setError] = useState(\"\")\n  const [validationErrors, setValidationErrors] = useState(params)\n  const [loading, setLoading] = useState(false)\n  const [queryParams, setQueryParams] = useState(\n    new URLSearchParams(useLocation().search)\n  )\n  const history = useHistory()\n\n  async function doSignUp() {\n    setLoading(true)\n    if (\n      firstName &&\n      email &&\n      password &&\n      confirmPassword &&\n      netSalary &&\n      netMonthlyIncome\n    ) {\n      const response = await fetch(\"http://localhost:5000/user/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          firstName,\n          lastName,\n          email,\n          password,\n          confirmPassword,\n          netSalary,\n          netMonthlyIncome,\n        }),\n      })\n      if (response.status !== 201) {\n        if (response.status === 500) {\n          setError(\n            \"Something went wrong. Check your internet connection or try again.\"\n          )\n        } else if (response.status === 401) {\n          setError(\"Your username or password is incorrect.\")\n        } else if (response.status === 400) {\n          await response.json().then((errors) => {\n            const messages = params\n            errors.errors.forEach(\n              (error) => (messages[error.param] = error.msg)\n            )\n            setValidationErrors(messages)\n          })\n        }\n        return setLoading(false)\n      }\n      history.push(\"/login?newsignup=true\")\n    }\n  }\n\n  return (\n    <Grid stretched relaxed fluid=\"true\" stackable className=\"mt-3\">\n      <Container>\n        {queryParams.get(\"delete_account\") ? (\n          <Message color=\"blue\">\n            We're sorry to see you go! Make a new account any time to manage\n            your spending.\n          </Message>\n        ) : null}\n        {error ? <Message color=\"red\">{error}</Message> : null}\n        <Header as=\"h1\">Sign Up</Header>\n        <Grid.Column className=\"mt-2\">\n          <Form>\n            <Form.Group widths=\"equal\">\n              <Form.Field error={validationErrors.firstName}>\n                <label>First Name</label>\n                <input\n                  fluid=\"true\"\n                  placeholder=\"First Name\"\n                  onChange={(e) => setFirstName(e.target.value)}\n                />\n                {validationErrors.firstName ? (\n                  <Message color=\"red\">{validationErrors.firstName}</Message>\n                ) : null}\n              </Form.Field>\n              <Form.Field error={validationErrors.lastName}>\n                <label>Last Name</label>\n                <input\n                  fluid=\"true\"\n                  placeholder=\"Last Name\"\n                  onChange={(e) => setLastName(e.target.value)}\n                />\n                {validationErrors.lastName ? (\n                  <Message color=\"red\">{validationErrors.lastName}</Message>\n                ) : null}\n              </Form.Field>\n            </Form.Group>\n            <Form.Field error={validationErrors.email}>\n              <label>Email</label>\n              <input\n                placeholder=\"Email address\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              {validationErrors.email ? (\n                <Message color=\"red\">{validationErrors.email}</Message>\n              ) : null}\n            </Form.Field>\n            <Form.Field\n              error={\n                validationErrors.password || validationErrors.confirmPassword\n              }\n            >\n              <label>Password</label>\n              <input\n                placeholder=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                type=\"password\"\n              />\n              {validationErrors.password ? (\n                <Message color=\"red\">{validationErrors.password}</Message>\n              ) : null}\n            </Form.Field>\n\n            <Form.Field error={validationErrors.confirmPassword}>\n              <label>Confirm Password</label>\n              <input\n                placeholder=\"confirm password\"\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                type=\"password\"\n              />\n              {validationErrors.confirmPassword ? (\n                <Message color=\"red\">\n                  {validationErrors.confirmPassword}\n                </Message>\n              ) : null}\n            </Form.Field>\n            <Divider section />\n            <Header as=\"h3\">Financial Info</Header>\n            <Form.Group widths=\"equal\">\n              <Form.Field width={4} error={validationErrors.netSalary}>\n                <label>Net Salary</label>\n                <input\n                  onChange={(e) => setNetSalary(e.target.value)}\n                  value={netSalary}\n                  placeholder=\"Net salary\"\n                  type=\"number\"\n                />\n                {validationErrors.netSalary ? (\n                  <Message color=\"red\">{validationErrors.netSalary}</Message>\n                ) : null}\n              </Form.Field>\n              <Form.Field width={4} error={validationErrors.netMonthlyIncome}>\n                <label>Net Monthly Income</label>\n                <input\n                  onChange={(e) => setNetMonthlyIncome(e.target.value)}\n                  value={netMonthlyIncome}\n                  placeholder=\"Net monthly income\"\n                  type=\"number\"\n                />\n                {validationErrors.netMonthlyIncome ? (\n                  <Message color=\"red\">\n                    {validationErrors.netMonthlyIncome}\n                  </Message>\n                ) : null}\n              </Form.Field>\n            </Form.Group>\n\n            <Form.Field>\n              <Button primary loading={loading} onClick={doSignUp}>\n                Signup\n              </Button>\n            </Form.Field>\n          </Form>\n        </Grid.Column>\n      </Container>\n    </Grid>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBudget.js",["154","155","156"],"import React, { useState } from \"react\"\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Icon,\n  Segment,\n} from \"semantic-ui-react\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default () => {\n  const [budget, setBudget] = useState({\n    title: \"Personal\",\n    description: \"My personal budget for monthly expenses.\",\n    categories: [\n      { title: \"rent\", amount: 1200 },\n      { title: \"gas\", amount: 60 },\n      { title: \"student loan\", amount: 527 },\n      { title: \"beer\", amount: 30 },\n    ],\n    total: 1817,\n  })\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Budgets\", path: \"/budgets\" },\n          { name: \"Manage\", path: \"/budgets/manage\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Edit Budget</Header>\n        {budget ? (\n          <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n            <Header as=\"h3\">{budget.title}</Header>\n            <Divider />\n            <Form>\n              <Form.TextArea\n                label=\"Description\"\n                value={budget.description}\n              ></Form.TextArea>\n              <Form.Select\n                label=\"Categories\"\n                placeholder=\"Categories\"\n                options={budget.categories.map((cat, i) => ({\n                  key: i,\n                  text: cat.title.toUpperCase(),\n                  value: cat.title,\n                }))}\n              />\n              <Form.Input label=\"New Amount\" placeholder=\"E.g 35\" />\n            </Form>\n            <Button className=\"mt-1\" loading={loading} size=\"large\">\n              <Icon name=\"save\" />\n              Save\n            </Button>\n            <Button color=\"red\" size=\"large\">\n              <Icon name=\"warning circle\" />\n              Delete\n            </Button>\n          </Segment>\n        ) : null}\n      </Segment>\n    </Container>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Navbar.js",["157"],"import React from \"react\"\nimport { Menu, Container } from \"semantic-ui-react\"\nimport { NavLink } from \"react-router-dom\"\nimport ConfirmLogoutModal from \"./modals/ConfirmLogoutModal\"\n\nexport default ({ user, login, logout, darkmode }) => {\n  return (\n    <Menu inverted={!darkmode} style={{ borderRadius: \"0\" }}>\n      <Container>\n        <Menu.Item\n          as={NavLink}\n          to=\"/\"\n          exact\n          name={user ? \"dashboard\" : \"SimpleBudget\"}\n        />\n        {user ? (\n          <Menu.Item as={NavLink} to=\"/budgets/manage\" name=\"My Budgets\" />\n        ) : null}\n        <Menu.Menu position=\"right\">\n          {user ? (\n            <Menu.Item\n              as={NavLink}\n              to=\"/account\"\n              icon=\"user\"\n              name=\"Account\"\n            ></Menu.Item>\n          ) : null}\n          {!user ? <Menu.Item as={NavLink} to=\"/login\" name=\"login\" /> : null}\n          {user ? (\n            <ConfirmLogoutModal user={user} logout={logout} />\n          ) : (\n            <Menu.Item as={NavLink} to=\"/signup\" name=\"sign up\" />\n          )}\n        </Menu.Menu>\n      </Container>\n    </Menu>\n  )\n}\n",["158","159"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ProTip.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ViewStatistics.js",["160","161","162","163","164","165","166","167","168","169"],"import React, { useState } from \"react\"\nimport { Button, Container, Form, Header } from \"semantic-ui-react\"\n\nexport default function ViewStatistics() {\n  const [month, setMonth] = useState(new Date().getMonth())\n  const [year, setYear] = useState(new Date().getFullYear())\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n\n  return (\n    <Container>\n      <Header as=\"h1\" className=\"mt-2\">\n        Spending Statistics\n      </Header>\n    </Container>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Account.js",["170","171","172"],"import React, { Fragment, useEffect, useState } from \"react\"\nimport { useParams, useHistory } from \"react-router-dom\"\nimport AccountMenu from \"./AccountMenu\"\nimport AccountDetails from \"./AccountDetails\"\nimport FinancialProfile from \"./FinancialProfile\"\n\nexport default ({ user, bills, deleteUser }) => {\n  const { slug } = useParams()\n  const history = useHistory()\n\n  if (!slug) {\n    history.push(\"/account/details\")\n  }\n\n  return (\n    <Fragment>\n      <AccountMenu />\n      {slug === \"details\" || !slug ? (\n        <AccountDetails user={user} deleteUser={deleteUser} />\n      ) : (\n        <FinancialProfile user={user} bills={bills} />\n      )}\n    </Fragment>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBills.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddBill.js",["173"],"import React, { useState } from \"react\"\nimport {\n  Button,\n  Container,\n  Form,\n  Header,\n  Icon,\n  Segment,\n} from \"semantic-ui-react\"\nimport Cookies from \"js-cookie\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default function AddBill({ user, bills, addBill, setBills }) {\n  const [title, setTitle] = useState(\"\")\n  const [amount, setAmount] = useState(\"\")\n  const [due, setDue] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [buttonText, setButtonText] = useState(\"Save\")\n  const [error, setError] = useState(\"\")\n\n  function handleAddBill() {\n    if (title && amount && due && user) {\n      setLoading(true)\n      addBill(user, {\n        title,\n        amount,\n        due,\n        userId: user.id,\n      })\n        .then((response) => response.json())\n        .then((bill) => {\n          setBills([...bills, bill])\n          Cookies.set(\"bills\", JSON.stringify(bills))\n        })\n        .finally(() => {\n          setLoading(false)\n          setButtonText(\"Saved!\")\n          setTitle(\"\")\n          setAmount(\"\")\n          setDue(\"\")\n        })\n        .catch((error) => {\n          setError(error)\n        })\n    }\n  }\n\n  return (\n    <Container>\n      <Breadcrumb\n        color=\"blue\"\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Manage Bills\", path: \"/bills\" },\n          { name: \"New\", path: \"/bills/new\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h1\">Add Bill</Header>\n        <Form>\n          <Form.Field width=\"8\">\n            <Form.Input\n              fluid\n              placeholder=\"E.g. Phone Bill\"\n              label=\"Title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field width=\"8\">\n            <Form.Input\n              fluid\n              placeholder=\"E.g. 58.25\"\n              label=\"Amount\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field width=\"8\">\n            <Form.Input\n              fluid\n              type=\"Number\"\n              placeholder=\"Indicate day of the month\"\n              label=\"Due Date\"\n              value={due}\n              onChange={(e) => setDue(e.target.value)}\n            />\n          </Form.Field>\n          <Button loading={loading} onClick={handleAddBill}>\n            <Icon name=\"save\" />\n            {buttonText}\n          </Button>\n        </Form>\n      </Segment>\n    </Container>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Reminder.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteAccountModal.js",["174","175","176"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmLogoutModal.js",["177","178"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteBillModal.js",["179","180"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/FinancialProfile.js",["181"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBill.js",["182","183"],"import React, { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport {\n  Button,\n  Container,\n  Form,\n  Header,\n  Icon,\n  Segment,\n} from \"semantic-ui-react\"\nimport Cookies from \"js-cookie\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default function EditBill({\n  user,\n  bills,\n  updateBill,\n  setBills,\n  getBill,\n}) {\n  const { id } = useParams()\n  const [title, setTitle] = useState(\"\")\n  const [amount, setAmount] = useState(\"\")\n  const [due, setDue] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [buttonText, setButtonText] = useState(\"Save\")\n  const [error, setError] = useState(\"\")\n\n  useEffect(() => {\n    getBill(id, user)\n      .then((response) => response.json())\n      .then((bill) => {\n        setTitle(bill.title)\n        setAmount(bill.amount)\n        setDue(bill.due)\n      })\n      .catch((error) => setError(error))\n  }, [])\n\n  function handleSaveBill() {\n    setLoading(true)\n    updateBill(user, id, {\n      title,\n      amount,\n      due,\n    })\n      .then((response) => response.json())\n      .then((bill) => {\n        setBills([...bills.filter((el) => el.id !== bill.id), bill])\n        Cookies.set(\"bills\", JSON.stringify(bills))\n        setTitle(bill.title)\n        setAmount(bill.amount)\n        setDue(bill.due)\n        setButtonText(\"Saved!\")\n        setLoading(false)\n      })\n      .catch((error) => setError(error))\n  }\n\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Manage Bills\", path: \"/bills\" },\n          { name: \"Edit\", path: `/bills/${id}` },\n        ]}\n      />\n\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h1\">Edit Bill</Header>\n        <Form>\n          <Form.Field width=\"8\">\n            <Form.Input\n              fluid\n              label=\"Title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field width=\"8\">\n            <Form.Input\n              fluid\n              label=\"Amount\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field width=\"8\">\n            <Form.Input\n              fluid\n              type=\"Number\"\n              label=\"Due Date\"\n              value={due}\n              onChange={(e) => setDue(e.target.value)}\n            />\n          </Form.Field>\n          <Button loading={loading} onClick={handleSaveBill}>\n            <Icon name=\"save\" />\n            {buttonText}\n          </Button>\n        </Form>\n      </Segment>\n    </Container>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditExpenditure.js",["184","185","186","187","188","189","190","191"],{"ruleId":"192","severity":1,"message":"193","line":24,"column":17,"nodeType":"194","messageId":"195","endLine":24,"endColumn":25},{"ruleId":"192","severity":1,"message":"196","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"198","line":97,"column":42,"nodeType":"199","messageId":"200","endLine":97,"endColumn":44},{"ruleId":"201","severity":1,"message":"202","line":42,"column":6,"nodeType":"203","endLine":42,"endColumn":9,"suggestions":"204"},{"ruleId":"201","severity":1,"message":"205","line":42,"column":7,"nodeType":"206","endLine":42,"endColumn":8},{"ruleId":"192","severity":1,"message":"207","line":21,"column":10,"nodeType":"194","messageId":"195","endLine":21,"endColumn":15},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"192","severity":1,"message":"212","line":3,"column":16,"nodeType":"194","messageId":"195","endLine":3,"endColumn":26},{"ruleId":"192","severity":1,"message":"213","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":16},{"ruleId":"214","severity":1,"message":"215","line":6,"column":1,"nodeType":"216","endLine":131,"endColumn":2},{"ruleId":"192","severity":1,"message":"217","line":8,"column":9,"nodeType":"194","messageId":"195","endLine":8,"endColumn":13},{"ruleId":"192","severity":1,"message":"218","line":9,"column":9,"nodeType":"194","messageId":"195","endLine":9,"endColumn":14},{"ruleId":"208","replacedBy":"219"},{"ruleId":"210","replacedBy":"220"},{"ruleId":"192","severity":1,"message":"221","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"222","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"215","line":6,"column":1,"nodeType":"216","endLine":42,"endColumn":2},{"ruleId":"208","replacedBy":"223"},{"ruleId":"210","replacedBy":"224"},{"ruleId":"201","severity":1,"message":"225","line":23,"column":6,"nodeType":"203","endLine":23,"endColumn":8,"suggestions":"226"},{"ruleId":"208","replacedBy":"227"},{"ruleId":"210","replacedBy":"228"},{"ruleId":"192","severity":1,"message":"229","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":15},{"ruleId":"192","severity":1,"message":"230","line":14,"column":23,"nodeType":"194","messageId":"195","endLine":14,"endColumn":37},{"ruleId":"214","severity":1,"message":"215","line":7,"column":1,"nodeType":"216","endLine":57,"endColumn":2},{"ruleId":"192","severity":1,"message":"231","line":8,"column":10,"nodeType":"194","messageId":"195","endLine":8,"endColumn":17},{"ruleId":"192","severity":1,"message":"232","line":8,"column":19,"nodeType":"194","messageId":"195","endLine":8,"endColumn":29},{"ruleId":"233","severity":1,"message":"234","line":21,"column":5,"nodeType":"235","messageId":"200","endLine":21,"endColumn":21},{"ruleId":"192","severity":1,"message":"230","line":33,"column":23,"nodeType":"194","messageId":"195","endLine":33,"endColumn":37},{"ruleId":"214","severity":1,"message":"215","line":13,"column":1,"nodeType":"216","endLine":71,"endColumn":2},{"ruleId":"192","severity":1,"message":"236","line":14,"column":18,"nodeType":"194","messageId":"195","endLine":14,"endColumn":27},{"ruleId":"192","severity":1,"message":"232","line":25,"column":19,"nodeType":"194","messageId":"195","endLine":25,"endColumn":29},{"ruleId":"214","severity":1,"message":"215","line":6,"column":1,"nodeType":"216","endLine":38,"endColumn":2},{"ruleId":"208","replacedBy":"237"},{"ruleId":"210","replacedBy":"238"},{"ruleId":"192","severity":1,"message":"222","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":16},{"ruleId":"192","severity":1,"message":"239","line":2,"column":29,"nodeType":"194","messageId":"195","endLine":2,"endColumn":33},{"ruleId":"192","severity":1,"message":"218","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":15},{"ruleId":"192","severity":1,"message":"240","line":5,"column":17,"nodeType":"194","messageId":"195","endLine":5,"endColumn":25},{"ruleId":"192","severity":1,"message":"217","line":6,"column":10,"nodeType":"194","messageId":"195","endLine":6,"endColumn":14},{"ruleId":"192","severity":1,"message":"241","line":6,"column":16,"nodeType":"194","messageId":"195","endLine":6,"endColumn":23},{"ruleId":"192","severity":1,"message":"231","line":7,"column":10,"nodeType":"194","messageId":"195","endLine":7,"endColumn":17},{"ruleId":"192","severity":1,"message":"232","line":7,"column":19,"nodeType":"194","messageId":"195","endLine":7,"endColumn":29},{"ruleId":"192","severity":1,"message":"207","line":8,"column":10,"nodeType":"194","messageId":"195","endLine":8,"endColumn":15},{"ruleId":"192","severity":1,"message":"193","line":8,"column":17,"nodeType":"194","messageId":"195","endLine":8,"endColumn":25},{"ruleId":"192","severity":1,"message":"196","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"221","line":1,"column":38,"nodeType":"194","messageId":"195","endLine":1,"endColumn":46},{"ruleId":"214","severity":1,"message":"215","line":7,"column":1,"nodeType":"216","endLine":25,"endColumn":2},{"ruleId":"192","severity":1,"message":"207","line":19,"column":10,"nodeType":"194","messageId":"195","endLine":19,"endColumn":15},{"ruleId":"192","severity":1,"message":"221","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"242","line":3,"column":18,"nodeType":"194","messageId":"195","endLine":3,"endColumn":24},{"ruleId":"214","severity":1,"message":"215","line":5,"column":1,"nodeType":"216","endLine":53,"endColumn":2},{"ruleId":"192","severity":1,"message":"221","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"215","line":5,"column":1,"nodeType":"216","endLine":39,"endColumn":2},{"ruleId":"192","severity":1,"message":"221","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"215","line":4,"column":1,"nodeType":"216","endLine":45,"endColumn":2},{"ruleId":"192","severity":1,"message":"243","line":2,"column":45,"nodeType":"194","messageId":"195","endLine":2,"endColumn":49},{"ruleId":"192","severity":1,"message":"207","line":27,"column":10,"nodeType":"194","messageId":"195","endLine":27,"endColumn":15},{"ruleId":"201","severity":1,"message":"244","line":38,"column":6,"nodeType":"203","endLine":38,"endColumn":8,"suggestions":"245"},{"ruleId":"192","severity":1,"message":"217","line":19,"column":10,"nodeType":"194","messageId":"195","endLine":19,"endColumn":14},{"ruleId":"192","severity":1,"message":"218","line":20,"column":10,"nodeType":"194","messageId":"195","endLine":20,"endColumn":15},{"ruleId":"192","severity":1,"message":"246","line":21,"column":10,"nodeType":"194","messageId":"195","endLine":21,"endColumn":13},{"ruleId":"192","severity":1,"message":"232","line":22,"column":19,"nodeType":"194","messageId":"195","endLine":22,"endColumn":29},{"ruleId":"192","severity":1,"message":"207","line":23,"column":10,"nodeType":"194","messageId":"195","endLine":23,"endColumn":15},{"ruleId":"192","severity":1,"message":"193","line":23,"column":17,"nodeType":"194","messageId":"195","endLine":23,"endColumn":25},{"ruleId":"192","severity":1,"message":"247","line":24,"column":22,"nodeType":"194","messageId":"195","endLine":24,"endColumn":35},{"ruleId":"201","severity":1,"message":"248","line":41,"column":6,"nodeType":"203","endLine":41,"endColumn":8,"suggestions":"249"},"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getBills', 'getBudgets', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["250"],"The 0 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'error' is assigned a value but never used.","no-native-reassign",["251"],"no-negated-in-lhs",["252"],"'useHistory' is defined but never used.","'Reminder' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'year' is assigned a value but never used.","'month' is assigned a value but never used.",["251"],["252"],"'useState' is defined but never used.","'Button' is defined but never used.",["251"],["252"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["253"],["251"],["252"],"'Cookies' is defined but never used.","'setQueryParams' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-dupe-keys","Duplicate key 'netMonthlyIncome'.","ObjectExpression","'setBudget' is assigned a value but never used.",["251"],["252"],"'Form' is defined but never used.","'setMonth' is assigned a value but never used.","'setYear' is assigned a value but never used.","'Header' is defined but never used.","'List' is defined but never used.","React Hook useEffect has missing dependencies: 'getBill', 'id', and 'user'. Either include them or remove the dependency array. If 'getBill' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["254"],"'day' is assigned a value but never used.","'setButtonText' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'budgets', 'getExpenditure', and 'id'. Either include them or remove the dependency array. If 'getExpenditure' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["255"],{"desc":"256","fix":"257"},"no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [getBills, getBudgets, user]",{"range":"264","text":"265"},"Update the dependencies array to be: [id]",{"range":"266","text":"267"},"Update the dependencies array to be: [getBill, id, user]",{"range":"268","text":"269"},"Update the dependencies array to be: [budgets, getExpenditure, id]",{"range":"270","text":"271"},[1538,1541],"[getBills, getBudgets, user]",[587,589],"[id]",[901,903],"[getBill, id, user]",[1257,1259],"[budgets, getExpenditure, id]"]