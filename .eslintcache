[{"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/reportWebVitals.js":"1","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Settings.js":"2","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddExpense.js":"3","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBudgets.js":"4","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/App.js":"5","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Dashboard.js":"6","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Account.js":"7","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Login.js":"8","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/index.js":"9","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/NewBudget.js":"10","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Navbar.js":"11","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteAccountModal.js":"12","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteBudgetModal.js":"13","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBudget.js":"14","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ToggleSwitch.js":"15","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Signup.js":"16","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AccountDetails.js":"17","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmLogoutModal.js":"18"},{"size":356,"mtime":1607203421724,"results":"19","hashOfConfig":"20"},{"size":1088,"mtime":1607203421724,"results":"21","hashOfConfig":"20"},{"size":4444,"mtime":1607220507994,"results":"22","hashOfConfig":"20"},{"size":1742,"mtime":1607290394932,"results":"23","hashOfConfig":"20"},{"size":1784,"mtime":1608415983956,"results":"24","hashOfConfig":"20"},{"size":2968,"mtime":1607735259189,"results":"25","hashOfConfig":"20"},{"size":616,"mtime":1607735259077,"results":"26","hashOfConfig":"20"},{"size":2287,"mtime":1608417229490,"results":"27","hashOfConfig":"20"},{"size":536,"mtime":1607203421724,"results":"28","hashOfConfig":"20"},{"size":5112,"mtime":1608416444812,"results":"29","hashOfConfig":"20"},{"size":1126,"mtime":1608396056944,"results":"30","hashOfConfig":"20"},{"size":1206,"mtime":1607203421724,"results":"31","hashOfConfig":"20"},{"size":1056,"mtime":1607290368923,"results":"32","hashOfConfig":"20"},{"size":1975,"mtime":1607316103449,"results":"33","hashOfConfig":"20"},{"size":463,"mtime":1607203421724,"results":"34","hashOfConfig":"20"},{"size":6440,"mtime":1607997720081,"results":"35","hashOfConfig":"20"},{"size":2134,"mtime":1607735536006,"results":"36","hashOfConfig":"20"},{"size":988,"mtime":1607737172635,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1b9p1l1",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/reportWebVitals.js",[],["85","86"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Settings.js",["87","88","89"],"import React, { useState } from \"react\"\nimport { Button, Container, Header, Segment } from \"semantic-ui-react\"\nimport ToggleSwitch from \"./ToggleSwitch\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default () => {\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Settings\", path: \"/settings\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Application Settings</Header>\n        <section className=\"mt-2\">\n          <div>\n            <label>\n              <p>Show Pro Tips</p>\n              <ToggleSwitch />\n            </label>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <label>\n              <p>Show Reminders</p>\n              <ToggleSwitch />\n            </label>\n          </div>\n\n          <div style={{ marginTop: \"8px\" }}>\n            <label>\n              <p>Dark Mode</p>\n              <ToggleSwitch />\n            </label>\n          </div>\n        </section>\n      </Segment>\n    </Container>\n  )\n}\n",["90","91"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AddExpense.js",["92","93","94"],"import React, { useState } from \"react\"\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Icon,\n  List,\n  Segment,\n} from \"semantic-ui-react\"\nimport Breadcrumb from \"./Breadcrumb\"\n\nexport default () => {\n  const [amount, setAmount] = useState(\"\")\n  const [budget, setBudget] = useState(\"\")\n  const [budgets, setBudgets] = useState([\n    {\n      title: \"Personal\",\n      categories: [\n        { key: 1, text: \"Car\", value: \"car\" },\n        { key: 2, text: \"Groceries\", value: \"groceries\" },\n      ],\n    },\n    {\n      title: \"Business\",\n      categories: [\n        { key: 1, text: \"Internet\", value: \"internet\" },\n        { key: 2, text: \"Debit Machine\", value: \"debit machine\" },\n      ],\n    },\n  ])\n  const [category, setCategory] = useState(\"\")\n  const [date, setDate] = useState(new Date())\n  const [loading, setLoading] = useState(false)\n  const [payload, setPayload] = useState(\"\")\n  const [titles, setTitles] = useState([\n    { key: 1, text: \"Personal\", value: \"personal\" },\n    { key: 2, text: \"Business\", value: \"business\" },\n  ])\n\n  /**\n   * Set budget state based on budget dropdown value\n   * @param {Object} data\n   */\n  const handleBudgetDropdownChange = (data) => {\n    setBudget(\n      budgets.find((budget) => budget.title.toLowerCase() === data.value)\n    )\n  }\n\n  /**\n   * Add a new expenditure to the payload\n   */\n  const addToPayload = () => {\n    setPayload([\n      ...payload,\n      {\n        budget: budget.title,\n        category,\n        amount,\n        date,\n      },\n    ])\n    setAmount(\"\")\n  }\n\n  /**\n   * Remove an expenditure from state\n   * @param {Number} i - expenditure index\n   */\n  const removeFromPayload = (i) => {\n    const newPayload = payload.filter((item, index) => index !== i)\n    setPayload(newPayload)\n  }\n\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Expenditures\", path: \"/expenditures\" },\n          { name: \"New\", path: \"/expenditures/new\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Add Expenses</Header>\n        <Form className=\"mt-1\">\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              type=\"date\"\n              label=\"Date\"\n              value={date}\n              onChange={(e, data) => setDate(data.value)}\n            />\n            <Form.Select\n              label=\"Budget\"\n              options={titles}\n              placeholder=\"Budget\"\n              onChange={(e, data) => handleBudgetDropdownChange(data)}\n            ></Form.Select>\n            <Form.Select\n              label=\"Category\"\n              options={budget.categories}\n              placeholder=\"Category\"\n              onChange={(e, data) => setCategory(data.value)}\n            ></Form.Select>\n            <Form.Input\n              label=\"Amount\"\n              placeholder=\"E.g 25.56\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            ></Form.Input>\n          </Form.Group>\n          <Button color=\"green\" size=\"tiny\" onClick={addToPayload}>\n            <Icon name=\"plus\" />\n            Add\n          </Button>\n        </Form>\n        {payload ? (\n          <React.Fragment>\n            <List divided style={{ marginTop: \"22px\" }}>\n              {payload.map((item, i) => (\n                <List.Item key={i}>\n                  <List.Content floated=\"right\">\n                    <Button\n                      onClick={() => removeFromPayload(i)}\n                      size=\"mini\"\n                      color=\"red\"\n                      float=\"right\"\n                      icon=\"minus\"\n                    ></Button>\n                  </List.Content>\n                  <List.Content>\n                    <List.Header>{item.budget}</List.Header>\n                    <List.Description>\n                      {item.category.toUpperCase()}, ${item.amount}\n                    </List.Description>\n                    <List.Description>{item.date}</List.Description>\n                  </List.Content>\n                </List.Item>\n              ))}\n            </List>\n          </React.Fragment>\n        ) : null}\n        <Divider />\n        <Button\n          compact\n          size=\"big\"\n          loading={loading}\n          onClick={(e) => setLoading(!loading)}\n        >\n          <Icon name=\"save\" />\n          Save\n        </Button>\n      </Segment>\n    </Container>\n  )\n}\n",["95","96"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ManageBudgets.js",["97","98","99","100","101"],"import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport {\n  Button,\n  Container,\n  Header,\n  Icon,\n  List,\n  Segment,\n} from \"semantic-ui-react\"\nimport Breadcrumb from \"./Breadcrumb\"\nimport ConfirmDeleteBudgetModal from \"./modals/ConfirmDeleteBudgetModal\"\n\nexport default () => {\n  const [budgets, setBudget] = useState([\n    {\n      title: \"My Personal Budget\",\n      description: \"My personal budget for monthly expenses.\",\n      id: 1,\n    },\n    { title: \"Side Hustle\", description: \"For my freelance business.\", id: 2 },\n  ])\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Container>\n      <Breadcrumb\n        sections={[\n          { name: \"Dashboard\", path: \"/\" },\n          { name: \"Budgets\", path: \"/budgets\" },\n          { name: \"Manage\", path: \"/budgets/manage\" },\n        ]}\n      />\n      <Segment raised className=\"mt-2\" style={{ padding: \"35px\" }}>\n        <Header as=\"h2\">Manage Budgets</Header>\n        <List divided relaxed className=\"mt-2\">\n          {budgets.map((budget) => (\n            <List.Item style={{ marginBottom: \"12px\" }}>\n              <List.Content>\n                <List.Content floated=\"right\">\n                  <Button\n                    as={Link}\n                    to={`/budgets/manage/${budget.id}/`}\n                    compact\n                    icon=\"edit\"\n                    color=\"green\"\n                  />\n                  <ConfirmDeleteBudgetModal />\n                </List.Content>\n                <List.Header>{budget.title}</List.Header>\n                <List.Description>{budget.description}</List.Description>\n              </List.Content>\n            </List.Item>\n          ))}\n        </List>\n      </Segment>\n    </Container>\n  )\n}\n",["102","103"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/App.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Dashboard.js",["104","105","106"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Account.js",["107","108","109"],"import React, { Fragment, useEffect, useState } from \"react\"\nimport { useParams, useHistory } from \"react-router-dom\"\nimport AccountMenu from \"./AccountMenu\"\nimport AccountDetails from \"./AccountDetails\"\nimport FinancialProfile from \"./FinancialProfile\"\n\nexport default ({ user }) => {\n  const { slug } = useParams()\n  const history = useHistory()\n\n  if (!slug) {\n    history.push(\"/account/details\")\n  }\n\n  return (\n    <Fragment>\n      <AccountMenu />\n      {slug === \"details\" || !slug ? (\n        <AccountDetails user={user} />\n      ) : (\n        <FinancialProfile user={user} />\n      )}\n    </Fragment>\n  )\n}\n",["110","111"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Login.js",["112"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/index.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/NewBudget.js",[],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Navbar.js",["113"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteAccountModal.js",["114","115","116"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmDeleteBudgetModal.js",["117","118","119"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/EditBudget.js",["120","121","122"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/ToggleSwitch.js",["123"],"/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/Signup.js",["124"],"import React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport {\n  Button,\n  Container,\n  Divider,\n  Form,\n  Header,\n  Grid,\n  Message,\n} from \"semantic-ui-react\"\n\nexport default function SignUp() {\n  const params = {\n    firstName: false,\n    lastName: false,\n    email: false,\n    password: false,\n    confirmPassword: false,\n    netMonthlyIncome: false,\n    netMonthlyIncome: false,\n  }\n  const [firstName, setFirstName] = useState(\"\")\n  const [lastName, setLastName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [netSalary, setNetSalary] = useState(\"\")\n  const [netMonthlyIncome, setNetMonthlyIncome] = useState(\"\")\n  const [error, setError] = useState(\"\")\n  const [validationErrors, setValidationErrors] = useState(params)\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function doSignUp() {\n    setLoading(true)\n    if (\n      firstName &&\n      email &&\n      password &&\n      confirmPassword &&\n      netSalary &&\n      netMonthlyIncome\n    ) {\n      const response = await fetch(\"http://localhost:5000/user/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          firstName,\n          lastName,\n          email,\n          password,\n          confirmPassword,\n          netSalary,\n          netMonthlyIncome,\n        }),\n      })\n      if (response.status !== 201) {\n        if (response.status === 500) {\n          setError(\n            \"Something went wrong. Check your internet connection or try again.\"\n          )\n        } else if (response.status === 401) {\n          setError(\"Your username or password is incorrect.\")\n        } else if (response.status === 400) {\n          await response.json().then((errors) => {\n            const messages = params\n            errors.errors.forEach(\n              (error) => (messages[error.param] = error.msg)\n            )\n            setValidationErrors(messages)\n          })\n        }\n        return setLoading(false)\n      }\n      history.push(\"/login?newsignup=true\")\n    }\n  }\n\n  return (\n    <Grid stretched relaxed fluid=\"true\" stackable className=\"mt-3\">\n      <Container>\n        {error ? <Message color=\"red\">{error}</Message> : null}\n        <Header as=\"h1\">Sign Up</Header>\n        <Grid.Column className=\"mt-2\">\n          <Form>\n            <Form.Group widths=\"equal\">\n              <Form.Field error={validationErrors.firstName}>\n                <label>First Name</label>\n                <input\n                  fluid=\"true\"\n                  placeholder=\"First Name\"\n                  onChange={(e) => setFirstName(e.target.value)}\n                />\n                {validationErrors.firstName ? (\n                  <Message color=\"red\">{validationErrors.firstName}</Message>\n                ) : null}\n              </Form.Field>\n              <Form.Field error={validationErrors.lastName}>\n                <label>Last Name</label>\n                <input\n                  fluid=\"true\"\n                  placeholder=\"Last Name\"\n                  onChange={(e) => setLastName(e.target.value)}\n                />\n                {validationErrors.lastName ? (\n                  <Message color=\"red\">{validationErrors.lastName}</Message>\n                ) : null}\n              </Form.Field>\n            </Form.Group>\n            <Form.Field error={validationErrors.email}>\n              <label>Email</label>\n              <input\n                placeholder=\"Email address\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              {validationErrors.email ? (\n                <Message color=\"red\">{validationErrors.email}</Message>\n              ) : null}\n            </Form.Field>\n            <Form.Field\n              error={\n                validationErrors.password || validationErrors.confirmPassword\n              }\n            >\n              <label>Password</label>\n              <input\n                placeholder=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                type=\"password\"\n              />\n              {validationErrors.password ? (\n                <Message color=\"red\">{validationErrors.password}</Message>\n              ) : null}\n            </Form.Field>\n\n            <Form.Field error={validationErrors.confirmPassword}>\n              <label>Confirm Password</label>\n              <input\n                placeholder=\"confirm password\"\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                type=\"password\"\n              />\n              {validationErrors.confirmPassword ? (\n                <Message color=\"red\">\n                  {validationErrors.confirmPassword}\n                </Message>\n              ) : null}\n            </Form.Field>\n            <Divider section />\n            <Header as=\"h3\">Financial Info</Header>\n            <Form.Group widths=\"equal\">\n              <Form.Field width={4} error={validationErrors.netSalary}>\n                <label>Net Salary</label>\n                <input\n                  onChange={(e) => setNetSalary(e.target.value)}\n                  value={netSalary}\n                  placeholder=\"Net salary\"\n                  type=\"number\"\n                />\n                {validationErrors.netSalary ? (\n                  <Message color=\"red\">{validationErrors.netSalary}</Message>\n                ) : null}\n              </Form.Field>\n              <Form.Field width={4} error={validationErrors.netMonthlyIncome}>\n                <label>Net Monthly Income</label>\n                <input\n                  onChange={(e) => setNetMonthlyIncome(e.target.value)}\n                  value={netMonthlyIncome}\n                  placeholder=\"Net monthly income\"\n                  type=\"number\"\n                />\n                {validationErrors.netMonthlyIncome ? (\n                  <Message color=\"red\">\n                    {validationErrors.netMonthlyIncome}\n                  </Message>\n                ) : null}\n              </Form.Field>\n            </Form.Group>\n\n            <Form.Field>\n              <Button primary loading={loading} onClick={doSignUp}>\n                Signup\n              </Button>\n            </Form.Field>\n          </Form>\n        </Grid.Column>\n      </Container>\n    </Grid>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/AccountDetails.js",["125","126"],"/*\nOn page refresh, props becomes null. this has to be fixed.\n*/\n\nimport React, { Fragment } from \"react\"\nimport ConfirmDeleteAccountModal from \"./modals/ConfirmDeleteAccountModal\"\nimport {\n  Button,\n  Confirm,\n  Container,\n  Divider,\n  Grid,\n  Icon,\n  Segment,\n  Table,\n} from \"semantic-ui-react\"\n\nexport default ({\n  user: { firstName, lastName, email, createdAt, updatedAt },\n}) => {\n  return (\n    <Fragment>\n      <Container className=\"mt-1\">\n        <Table basic=\"very\">\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell className=\"bold\">First name</Table.Cell>\n              <Table.Cell>{firstName}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell className=\"bold\">Last name</Table.Cell>\n              <Table.Cell>{lastName}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell className=\"bold\">Email</Table.Cell>\n              <Table.Cell>{email}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell className=\"bold\">Account Created</Table.Cell>\n              <Table.Cell>{new Date(createdAt).toDateString()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell className=\"bold\">Last Updated</Table.Cell>\n              <Table.Cell>{new Date(updatedAt).toDateString()}</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Button size=\"medium\" color=\"teal\">\n          <Icon name=\"edit\" />\n          Edit\n        </Button>\n        <Divider className=\"mt-2\" />\n        <Segment className=\"mt-4\">\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={12} floated=\"left\">\n                <span>\n                  Don't want to manage your money anymore? You can delete at any\n                  time, but be warned: this action is permanent.\n                </span>\n              </Grid.Column>\n\n              <Grid.Column width={4}>\n                <ConfirmDeleteAccountModal />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </Container>\n    </Fragment>\n  )\n}\n","/home/michael/Desktop/Projects/simple-budget-app/simplebudget-web-client/src/components/modals/ConfirmLogoutModal.js",["127","128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"137","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":16},{"ruleId":"138","severity":1,"message":"139","line":6,"column":1,"nodeType":"140","endLine":42,"endColumn":2},{"ruleId":"129","replacedBy":"141"},{"ruleId":"131","replacedBy":"142"},{"ruleId":"138","severity":1,"message":"139","line":14,"column":1,"nodeType":"140","endLine":159,"endColumn":2},{"ruleId":"133","severity":1,"message":"143","line":17,"column":19,"nodeType":"135","messageId":"136","endLine":17,"endColumn":29},{"ruleId":"133","severity":1,"message":"144","line":37,"column":18,"nodeType":"135","messageId":"136","endLine":37,"endColumn":27},{"ruleId":"129","replacedBy":"145"},{"ruleId":"131","replacedBy":"146"},{"ruleId":"133","severity":1,"message":"147","line":7,"column":3,"nodeType":"135","messageId":"136","endLine":7,"endColumn":7},{"ruleId":"138","severity":1,"message":"139","line":14,"column":1,"nodeType":"140","endLine":59,"endColumn":2},{"ruleId":"133","severity":1,"message":"148","line":15,"column":19,"nodeType":"135","messageId":"136","endLine":15,"endColumn":28},{"ruleId":"133","severity":1,"message":"149","line":23,"column":10,"nodeType":"135","messageId":"136","endLine":23,"endColumn":17},{"ruleId":"133","severity":1,"message":"150","line":23,"column":19,"nodeType":"135","messageId":"136","endLine":23,"endColumn":29},{"ruleId":"129","replacedBy":"151"},{"ruleId":"131","replacedBy":"152"},{"ruleId":"133","severity":1,"message":"153","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":14},{"ruleId":"133","severity":1,"message":"154","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":6,"column":1,"nodeType":"140","endLine":113,"endColumn":2},{"ruleId":"133","severity":1,"message":"155","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"134","line":1,"column":38,"nodeType":"135","messageId":"136","endLine":1,"endColumn":46},{"ruleId":"138","severity":1,"message":"139","line":7,"column":1,"nodeType":"140","endLine":25,"endColumn":2},{"ruleId":"129","replacedBy":"156"},{"ruleId":"131","replacedBy":"157"},{"ruleId":"133","severity":1,"message":"158","line":14,"column":23,"nodeType":"135","messageId":"136","endLine":14,"endColumn":37},{"ruleId":"138","severity":1,"message":"139","line":6,"column":1,"nodeType":"140","endLine":38,"endColumn":2},{"ruleId":"133","severity":1,"message":"134","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"159","line":2,"column":18,"nodeType":"135","messageId":"136","endLine":2,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":4,"column":1,"nodeType":"140","endLine":45,"endColumn":2},{"ruleId":"133","severity":1,"message":"134","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"159","line":2,"column":18,"nodeType":"135","messageId":"136","endLine":2,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":4,"column":1,"nodeType":"140","endLine":41,"endColumn":2},{"ruleId":"138","severity":1,"message":"139","line":13,"column":1,"nodeType":"140","endLine":68,"endColumn":2},{"ruleId":"133","severity":1,"message":"148","line":14,"column":18,"nodeType":"135","messageId":"136","endLine":14,"endColumn":27},{"ruleId":"133","severity":1,"message":"150","line":25,"column":19,"nodeType":"135","messageId":"136","endLine":25,"endColumn":29},{"ruleId":"138","severity":1,"message":"139","line":7,"column":1,"nodeType":"140","endLine":27,"endColumn":2},{"ruleId":"160","severity":1,"message":"161","line":21,"column":5,"nodeType":"162","messageId":"163","endLine":21,"endColumn":21},{"ruleId":"133","severity":1,"message":"164","line":9,"column":3,"nodeType":"135","messageId":"136","endLine":9,"endColumn":10},{"ruleId":"138","severity":1,"message":"139","line":18,"column":1,"nodeType":"140","endLine":72,"endColumn":2},{"ruleId":"133","severity":1,"message":"134","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":5,"column":1,"nodeType":"140","endLine":39,"endColumn":2},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["165"],["166"],"'setBudgets' is assigned a value but never used.","'setTitles' is assigned a value but never used.",["165"],["166"],"'Icon' is defined but never used.","'setBudget' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["165"],["166"],"'Card' is defined but never used.","'Breadcrumb' is defined but never used.","'useEffect' is defined but never used.",["165"],["166"],"'setQueryParams' is assigned a value but never used.","'Header' is defined but never used.","no-dupe-keys","Duplicate key 'netMonthlyIncome'.","ObjectExpression","unexpected","'Confirm' is defined but never used.","no-global-assign","no-unsafe-negation"]